{"version":3,"file":"static/js/main.a18d4552.js","mappings":"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","sources":["utils/storer.ts","utils/date.ts","utils/language.ts","utils/platform.ts","constants/session.js","api/client.js","contexs/global.js","hooks/use-theme.js","comps/utils/number.js","comps/icons.js","comps/buttons.js","api/graphql/category.js","utils/flatten.js","comps/error.js","comps/indicators.js","comps/tags.js","constants/index.js","utils/uri.js","comps/channels/StoryItem.js","comps/list.js","api/graphql/channel.js","comps/channels/ListStories.js","hooks/use-prefer.js","screens/channel.js","screens/chart.js","screens/confirm.js","screens/create.js","api/graphql/like.js","comps/like.js","comps/utils/colors.js","comps/covers/index.js","comps/animations/scroll.js","comps/details/scroll-header.js","api/graphql/story.js","screens/details.js","screens/explorer.js","comps/home/StoryItem.js","comps/home/Collection.js","api/graphql/collection.js","comps/home/StoriesCollections.js","comps/home/CarouselItem.js","constants/screens.js","comps/home/Features.js","comps/animations/flip.js","comps/prefer/icon.js","comps/prefer/switch.js","screens/home.js","api/index.js","comps/inbox/item.js","screens/inbox.js","screens/library.js","screens/me.js","screens/notfound.js","screens/reading.js","screens/search.js","comps/utils/logout.js","comps/utils/setToken.js","constants/player.js","contexs/player.js","comps/players/playbacks/bm.js","hooks/use-bm.js","comps/players/comps/bm-volume.js","hooks/use-language.js","screens/settings.js","api/graphql/telemetry.js","api/test/todos.js","comps/test/Todos.js","comps/prefer/anim.js","comps/socialauth/facebook.js","comps/socialauth/google.js","hooks/use-playback.js","comps/players/sound-ui.js","screens/test.js","navigation/appStack.js","comps/logo.js","screens/preference.js","screens/login.js","screens/register.js","navigation/authStack.js","navigation/linking.js","theme/index.js","i18n.js","App.js","services/rlog.js","_patch.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/harmony module decorator","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Storer = {\r\n\tset: async (key: string, content: any): Promise<void> => {\r\n\t\treturn await AsyncStorage.setItem(key, JSON.stringify(content));\r\n\t},\r\n\tget: async (key: string): Promise<any> => {\r\n\t\treturn await AsyncStorage.getItem(key).then((res) => JSON.parse(res)).catch(() => null);\r\n\t},\r\n\tdelete: async (key: string): Promise<void> => {\r\n\t\treturn await AsyncStorage.removeItem(key);\r\n\t}\r\n};\r\n\r\nexport default Storer;\r\n","const FORMAT_VI = 'Vietnamese';\r\nconst FORMAT_EN = 'English';\r\n\r\nfunction convertDate(format: string, date: Date): string {\r\n    const pad = (s) => (s < 10 ? '0' + s : s);\r\n    switch (format) {\r\n      default:\r\n      case FORMAT_VI:\r\n        return [\r\n          pad(date.getDate()),\r\n          pad(date.getMonth() + 1),\r\n          date.getFullYear(),\r\n        ].join('-');\r\n      case FORMAT_EN:\r\n        return [\r\n          date.getFullYear(),\r\n          pad(date.getMonth() + 1),\r\n          pad(date.getDate()),\r\n        ].join('-');\r\n    }\r\n  }\r\n\r\nconst DateUtils = {\r\n    toVietNamese: (date: Date): string => convertDate(FORMAT_VI, date),\r\n    toEnglish: (date: Date): string => convertDate(FORMAT_EN, date),\r\n    toStr: (date: Date): string => convertDate(FORMAT_EN, date),\r\n};\r\n  \r\nexport default DateUtils;","import * as Localization from 'expo-localization';\r\n\r\n/**\r\n * Locales supported\r\n */\r\nconst LANGUAGES = ['vi', 'en'];\r\n\r\n/**\r\n * Gets current locale, and if it is not one of the accepted it falls backs to english\r\n */\r\nfunction getLocale(): string {\r\n  const locale = Localization.locale.substring(0, 2);\r\n  const customLocale = locale === 'vi' ? 'vi' : locale;\r\n  return LANGUAGES.includes(customLocale) ? customLocale : 'en';\r\n}\r\n\r\nconst Language = {\r\n  filteredLocale: (): string => getLocale(),\r\n};\r\n\r\nexport default Language;","import { Platform } from 'react-native';\r\n\r\ninterface PlatformUtils {\r\n  isIos: boolean;\r\n  isAndroid: boolean;\r\n  isWeb: boolean;\r\n}\r\n\r\nconst PlatformUtils: PlatformUtils = {\r\n  isIos: Platform.OS === 'ios',\r\n  isAndroid: Platform.OS === 'android',\r\n  isWeb: Platform.OS === 'web',\r\n};\r\n\r\nexport default PlatformUtils;","import { Language } from '../utils';\r\nexport const TOKEN_KEY = 'token';\r\nexport const SESSION_KEY = 'session-key';\r\nexport const THEME_KEY = 'theme-key';\r\n\r\nexport const MALE = 'male';\r\nexport const FEMALE = 'female';\r\nexport const BOTH = 'both';\r\nexport const PREFER_CHOICES = [MALE, FEMALE];\r\n\r\nconst defaultSession = {\r\n  name: null,\r\n  sign: null,\r\n  birthDate: null,\r\n  sex: null,\r\n  level: null,\r\n  prefer: null,\r\n  theme: 'light',\r\n  notifications: false,\r\n  language: Language.filteredLocale(),\r\n};\r\n\r\nexport default defaultSession;\r\n","import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  createHttpLink,\r\n  defaultDataIdFromObject,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n\r\nimport possibleTypes from './possibleTypes.json';\r\nimport queries from './queries.json';\r\nimport flatten from '../utils/flatten';\r\nimport uniqBy from 'lodash.uniqby';\r\n\r\nimport Storer from '../utils/storer';\r\nimport { TOKEN_KEY } from '../constants/session';\r\n\r\n/** create entity types from possibleTypes */\r\nconst entityTypes = possibleTypes.GenericMorph.map(item => `${item}Entity`)\r\nconst mergedEntityTypes = entityTypes.reduce((acc, curr) => (\r\n  acc[curr] = { fields: { attributes: { merge: true } } }, acc), {}\r\n);\r\n\r\n/** crate merge rules for all loadmorable types. */\r\nconst mergeRules = queries.keys.reduce((acc, curr) => (\r\n  acc[curr] = {\r\n    keyArgs: ['filters', 'sort'],\r\n    merge(existing = { data: [], meta: {} }, incoming) {\r\n      const { meta, data } = incoming;\r\n      const merged = [...existing.data, ...data];\r\n      const uniq = uniqBy(merged, '__ref');\r\n      return {\r\n        data: uniq,\r\n        meta: { ...meta }\r\n      }\r\n    }\r\n  }, acc), {}\r\n);\r\n\r\nconst cacheOptions = {\r\n  possibleTypes: possibleTypes,\r\n  /** merge attributes to one entity in cache. */\r\n  typePolicies: {\r\n    ...mergedEntityTypes,\r\n    Query: {\r\n      fields: {\r\n        ...mergeRules,\r\n      }\r\n    },\r\n  },\r\n\r\n  dataIdFromObject(response) {\r\n    /** customize cache-key-id */\r\n    switch (response.__typename) {\r\n      case 'TodoEntity': return `TodoEntity:${response.id}`;\r\n      default: return defaultDataIdFromObject(response);\r\n    }\r\n  },\r\n}\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:1337/graphql',\r\n});\r\n\r\nconst authLink = setContext( async(_, { headers }) => {\r\n  const token = await Storer.get(TOKEN_KEY);\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\n// Initialize Apollo Client\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(cacheOptions),\r\n  connectToDevTools: true // TODO: remove in production.\r\n});","import React, { createContext, useContext, useReducer } from 'react';\r\nimport defaultSession from '../constants/session';\r\nimport { SESSION_KEY } from '../constants/session';\r\nimport Storer from '../utils/storer';\r\nimport { DateUtils } from '../utils';\r\n\r\nexport const reducer = (state, action) => {\r\n\tlet result = state;\r\n\tswitch (action.type) {\r\n\t\tcase 'switchTheme':\r\n\t\t\tresult = {\r\n\t\t\t\t...state,\r\n\t\t\t\ttheme: action.theme\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'setLogOut':\r\n\t\t\tresult = {\r\n\t\t\t\t...state,\r\n\t\t\t\tsession: default_session\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'toggleLoader':\r\n\t\t\tresult = {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowLoader: !state.showLoader\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'setSession':\r\n\t\t\tresult = {\r\n\t\t\t\t...state,\r\n\t\t\t\tsession: { ...state.session, ...action.fields }\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'setDay':\r\n\t\t\tresult = {\r\n\t\t\t\t...state,\r\n\t\t\t\tday: action.day,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t}\r\n\tif(action.save) {\r\n\t\tStorer.set(SESSION_KEY, result.session);\r\n\t}\r\n\treturn result;\r\n};\r\n\r\nexport const initialState = {\r\n\tshowLoader: false,\r\n\tsession: defaultSession,\r\n\tday: DateUtils.toStr(new Date()),\r\n};\r\n\r\nexport const StateContext = createContext(initialState);\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>{children}</StateContext.Provider>\r\n);\r\n\r\nexport const useGlobals = () => useContext(StateContext);\r\n","import { useGlobals } from \"../contexs/global\";\r\n\r\nconst THEME_DARK = 'dark';\r\nconst THEME_LIGHT = 'light';\r\n\r\nexport const useIsDark = () => {\r\n  const [{ session: { theme } }, dispatch] = useGlobals();\r\n \r\n  const switchTheme = () => {\r\n    dispatch({\r\n      type: 'setSession',\r\n      fields: {\r\n        theme: theme === THEME_DARK ? THEME_LIGHT : THEME_DARK,\r\n      },\r\n      save: true,\r\n    });\r\n  };\r\n\r\n  return [theme === THEME_DARK, switchTheme];\r\n};\r\n","function fmtNum(num) {\r\n    if (!num) return '0'\r\n    if (num < 1000) return num\r\n    if (num >= 1000 && num < 1000000 ){\r\n        return `${ (num / 1000).toFixed(1) }K`\r\n    }\r\n    if (num >= 1000000 && num < 1000000000 ){\r\n        return `${ (num / 1000000).toFixed(1) }M`\r\n    }\r\n    if (num >= 100000000) {\r\n        return `${ (num / 100000000).toFixed(1) }B`\r\n    }\r\n    return num\r\n}\r\n\r\nexport {\r\n    fmtNum,\r\n}","import React, { useMemo } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption, Subheading, IconButton, Colors, useTheme } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { fmtNum } from './utils/number';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const ViewsIcon = ({ views }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <View style={styles.compact}>\r\n        <Icon size={10} color={theme.colors.secondary} name={'eye'}/>\r\n        <Caption>{fmtNum(views)}</Caption>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const LikesIcon = ({ likes }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <View style={styles.compact}>\r\n        <Icon size={10} color={theme.colors.secondary} name={'heart'}/>\r\n        <Caption>{fmtNum(likes)}</Caption>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const NumChapIcon = ({ num }) => {\r\n    const theme = useTheme();\r\n  \r\n    return (\r\n      <View style={styles.compact}>\r\n          <Icon size={10} color={theme.colors.secondary} name={'list'}/>\r\n          <Caption>{fmtNum(num)}</Caption>\r\n      </View>\r\n    );\r\n  };\r\n\r\nexport const ShareIcon = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <View style={styles.vcompact}>\r\n        <Icon size={30} color={theme.colors.secondary} name={'share-social-outline'}/>\r\n        <Caption>{t('Share')}</Caption>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const LikeIcon = ({liked}) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <View style={[styles.vcompact, {minWidth: 50}]}>\r\n        <Icon size={30} color={theme.colors.secondary} name={ liked ? 'heart': 'heart-outline'}/>\r\n        <Caption>{t(liked ? 'UnLike': 'Like')}</Caption>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const CoinIcon = ({ num }) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.vcompact}>\r\n      <View style={styles.compact}>\r\n          <Icon size={10} color={theme.colors.secondary} name={'credit-card'}/>\r\n          <Caption>{t('Coin')}</Caption>\r\n      </View>\r\n      <Subheading>{fmtNum(num)}</Subheading>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const PointIcon = ({ num }) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.vcompact}>\r\n      <View style={styles.compact}>\r\n          <Icon size={10} color={theme.colors.secondary} name={'credit-card'}/>\r\n          <Caption>{t('Point')}</Caption>\r\n      </View>\r\n      <Subheading>{fmtNum(num)}</Subheading>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const TicketIcon = ({ num }) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.vcompact}>\r\n      <View style={styles.compact}>\r\n          <Icon size={10} color={theme.colors.secondary} name={'credit-card'}/>\r\n          <Caption>{t('Ticket')}</Caption>\r\n      </View>\r\n      <Subheading>{fmtNum(num)}</Subheading>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const MuteIcon = ({muted, volume}) => {\r\n  const theme = useTheme();\r\n  const v = volume || 1;\r\n  const icon = muted ? 'volume-mute':\r\n              (\r\n                v >= 0.5 ? 'volume-high'\r\n                              : 'volume-medium'       \r\n              );  \r\n  return (\r\n    <Icon size={30} \r\n          color={theme.colors.secondary} \r\n          name={icon}/>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    compact: {\r\n        gap: 5,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    vcompact: {\r\n      gap: 0,\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n  }\r\n});\r\n","import React, { useMemo } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport {\r\n  Badge,\r\n  IconButton,\r\n  TouchableRipple,\r\n  Colors, useTheme\r\n} from 'react-native-paper';\r\n\r\nimport { ShareIcon, LikeIcon, MuteIcon } from './icons';\r\n\r\nexport const ShareButton = ({ url }) => (\r\n  <TouchableRipple onPress={() => {\r\n    console.log('Share');\r\n  }}>\r\n    <ShareIcon />\r\n  </TouchableRipple>\r\n)\r\n\r\nexport const LikeButton = ({ liked, onPress }) => (\r\n  <TouchableRipple onPress={onPress}>\r\n    <LikeIcon liked={liked}/>\r\n  </TouchableRipple>\r\n)\r\n\r\nexport const MuteButton = ({ muted, volume, onPress }) => (\r\n  <TouchableRipple onPress={onPress}>\r\n    <MuteIcon muted={muted} volume={volume}/>\r\n  </TouchableRipple>\r\n)\r\n\r\nexport const BadgeIcon = ({ onPress, icon, size, color, badges }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <View>\r\n      <IconButton icon={icon} size={size} color={color} onPress={onPress} />\r\n      <Badge\r\n        size={12}\r\n        visible={badges > 0}\r\n        style={[\r\n          styles.badge,\r\n          {\r\n            color: theme.colors.text,\r\n            backgroundColor: theme.colors.primary,\r\n          },\r\n        ]}\r\n      >\r\n        {badges}\r\n      </Badge>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {},\r\n  badge: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    top: 14,\r\n    right: 8,\r\n  },\r\n});\r\n","import { gql } from \"@apollo/client\";\r\nexport const GET_CATEGORIES = gql`\r\n\tquery AllCategories($sort: [String]) {\r\n\t\tcategories(sort: $sort) {\r\n\t\t\tdata {\r\n\t\t\t\tid\r\n\t\t\t\tattributes {\r\n\t\t\t\t\tcode\r\n\t\t\t\t\tname\r\n\t\t\t\t\theadline\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\tpickup\r\n\t\t\t\t\timage {\r\n\t\t\t\t\t  data {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tattributes {\r\n\t\t\t\t\t\t  url\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","function flattenArray(obj) {\r\n    return obj.map((e) => flatten(e));\r\n}\r\n\r\nfunction flattenData(obj) {\r\n    return flatten(obj.data);\r\n}\r\n\r\nfunction flattenAttrs(obj) {\r\n    let attrs = {};\r\n    for (let key in obj.attributes) {\r\n        attrs[key] = flatten(obj.attributes[key]);\r\n    }\r\n    return {\r\n        id: obj.id,\r\n        ...attrs,\r\n    };\r\n}\r\n\r\nfunction flatten(obj, init=null) {\r\n    if (obj === null || obj === undefined) {\r\n        return obj || init;\r\n    }\r\n\r\n    if (Array.isArray(obj)) {\r\n        return flattenArray(obj);\r\n    }\r\n    if (obj.data) {\r\n        return flattenData(obj);\r\n    }\r\n    if (obj.attributes) {\r\n        return flattenAttrs(obj);\r\n    }\r\n    return obj;\r\n}\r\nexport default flatten;","import * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption, Button } from 'react-native-paper';\r\n\r\n\r\nconst Error = React.memo(({ msg, onRefresh }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.error}>\r\n      <Caption>{ msg || t('Have error, try again ?')}</Caption>\r\n      <Button onPress={onRefresh}>{t('Retry')}</Button>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst NotFound = React.memo(({ msg, back }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.error}>\r\n      <Caption>{ msg || t('Not found :(')}</Caption>\r\n      <Button onPress={back}>{t('Back')}</Button>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    error: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport { Error, NotFound };\r\n","import * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption, ActivityIndicator } from 'react-native-paper';\r\n\r\nconst ListLoadmoreIndicator = React.memo((props) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.container}>\r\n      <ActivityIndicator />\r\n      <Caption>{t('Fetching more..')}</Caption>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst ScreenLoadingIndicator = React.memo(props => {\r\n  return (\r\n    <View style={styles.loading}>\r\n      <ActivityIndicator size=\"large\" />\r\n    </View>\r\n  )\r\n});\r\n\r\nconst LazyLoadingIndicator = React.memo(({msg}) => {\r\n  return (\r\n    <View style={styles.loading}>\r\n      <ActivityIndicator />\r\n      <Caption>{msg}</Caption>\r\n    </View>\r\n  )\r\n});\r\n\r\n\r\nexport { \r\n  ListLoadmoreIndicator,\r\n  ScreenLoadingIndicator,\r\n  LazyLoadingIndicator \r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption } from 'react-native-paper';\r\nimport { useTheme, MD3Colors } from 'react-native-paper';\r\n\r\nconst Tag = ({tag}) => {\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <Caption style={[{\r\n            backgroundColor: theme.colors.backdrop ,\r\n            borderWidth: 0.1,\r\n            borderRadius: 5,\r\n            borderColor: theme.colors.outline,\r\n        }, styles.tag]}> {tag} </Caption>\r\n    )\r\n}\r\n\r\nconst Tags = React.memo(({ tags }) => (\r\n    <View style={styles.tags}>\r\n        {tags.map( (tag) => <Tag key={tag.name} tag={tag.name} />)}\r\n    </View>\r\n));\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    tags: {\r\n        columnGap: 3,\r\n        height: 20,\r\n        flexDirection: 'row',\r\n    },\r\n    tag: {\r\n        height: 20,\r\n        fontSize: 8,\r\n    },\r\n});\r\n\r\nexport default Tags;","const MEDIA_HOST = 'http://localhost:1337';\r\n\r\nconst STORY_DEFAULT_THUMBNAIL = 'uploads/example_0ff21cbed5.jpg';\r\n\r\nexport {\r\n    MEDIA_HOST,\r\n    STORY_DEFAULT_THUMBNAIL,\r\n}","import { \r\n    MEDIA_HOST,\r\n    STORY_DEFAULT_THUMBNAIL, } from \"../constants\";\r\n\r\nfunction coverUri(cover, extUrl) {\r\n    if (cover.url) {\r\n        if (cover.url.startsWith(\"http\")){\r\n            return cover.url;\r\n        }\r\n        return `${MEDIA_HOST}${cover.url}`;\r\n    }\r\n\r\n    if (extUrl) return extUrl;\r\n\r\n    return `${MEDIA_HOST}/${STORY_DEFAULT_THUMBNAIL}`;\r\n}\r\n\r\nexport {\r\n    coverUri,\r\n}","\r\nimport * as React from 'react';\r\nimport { View, Image, StyleSheet } from 'react-native';\r\nimport {\r\n    Text,\r\n    List,\r\n    Caption,\r\n    Button,\r\n    useTheme,\r\n    Divider,\r\n    Title,\r\n    Subheading,\r\n    Chip,\r\n    TouchableRipple,\r\n} from 'react-native-paper';\r\n\r\nimport { NumChapIcon, ViewsIcon } from '../icons';\r\nimport Tags from '../tags';\r\n\r\nimport { coverUri } from '../../utils/uri';\r\n\r\nconst StoryItem = React.memo(({ navigation, id, code, title, categories, author, cover, external_cover_url, num_chapters, views }) => (\r\n    <TouchableRipple style={styles.container} onPress={()=> navigation.push('Details', {\r\n        storyCode: code,\r\n    }) }>\r\n        <>\r\n        <Image source={{uri: coverUri(cover, external_cover_url)}} style={styles.image} resizeMode={'cover'} />\r\n        <View style={styles.content}>\r\n            <View style={styles.head}>\r\n                <Subheading>{title}</Subheading>\r\n                <Tags tags={categories} />\r\n                <Caption>{author.name}</Caption>\r\n            </View>\r\n            <View></View>\r\n            <View style={styles.footer}>\r\n                <ViewsIcon views={views} />\r\n                <NumChapIcon num={num_chapters} />\r\n            </View>\r\n        </View>\r\n        </>\r\n    </TouchableRipple>\r\n));\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginVertical: 10,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    footer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        gap: 20,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 2 / 3,\r\n        marginRight: 10,\r\n        borderRadius: 5,\r\n    },\r\n    content: {\r\n        flex: 2,\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'column',\r\n        // borderColor: \"lightgray\",\r\n        // borderBottomWidth: 0.5,\r\n    },\r\n    head: {\r\n        flex: 3,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n    }\r\n});\r\n\r\nexport default StoryItem;","import * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption, Button } from 'react-native-paper';\r\n\r\nconst ItemSeparator = React.memo((props) => <View style={styles.separator} />);\r\n\r\nconst ListHeader = React.memo((props) => <></>);\r\n\r\nconst ListEmpty = React.memo(({ onRefresh }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.empty}>\r\n      <Caption>{t('No data at the moment')}</Caption>\r\n      <Button onPress={onRefresh}>{t('Refresh')}</Button>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  empty: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: 'grey',\r\n    marginHorizontal: 10,\r\n  },\r\n});\r\n\r\nexport { ItemSeparator, ListHeader, ListEmpty };\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_STORIES = gql`\r\nquery getStoriesByTag($tag: String!, $start: Int, $limit: Int) {\r\n  stories(\r\n    sort: [\"views:DESC\", \"updatedAt:DESC\"]\r\n    filters: { categories: { code: { eq: $tag } } }\r\n    pagination: { start: $start, limit: $limit }\r\n  ) {\r\n    meta {\r\n      pagination {\r\n        total\r\n        page\r\n        pageSize\r\n        pageCount\r\n      }\r\n    }\r\n    data {\r\n      id\r\n      attributes {\r\n        full\r\n        code\r\n        title\r\n        num_chapters\r\n        views\r\n        external_cover_url\r\n        cover {\r\n          data {\r\n            attributes {\r\n              url\r\n            }\r\n          }\r\n        }\r\n        categories {\r\n          data {\r\n            id\r\n            attributes {\r\n              name\r\n              code\r\n            }\r\n          }\r\n        }\r\n        author {\r\n          data {\r\n            id\r\n            attributes {\r\n              code\r\n              name\r\n            }\r\n          }\r\n        }\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n","import * as React from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    FlatList,\r\n    RefreshControl,\r\n} from 'react-native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, Subheading, useTheme } from 'react-native-paper';\r\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\r\n\r\nimport StoryItem from './StoryItem';\r\n\r\nimport { Error } from '../error';\r\nimport { ListLoadmoreIndicator, ScreenLoadingIndicator } from '../indicators';\r\nimport { ListHeader, ItemSeparator, ListEmpty } from '../list';\r\n\r\nimport flatten from '../../utils/flatten';\r\nimport { GET_STORIES } from '../../api/graphql/channel';\r\n\r\nconst ListStories = ({ route, navigation }) => {\r\n    const theme = useTheme();\r\n    const { t } = useTranslation();\r\n    const { loading, error, data, fetchMore, refetch, networkStatus } = useQuery(GET_STORIES, {\r\n        notifyOnNetworkStatusChange: true,\r\n        variables: {\r\n            start: 0,\r\n            limit: 2,\r\n            tag: route.name,\r\n        },\r\n    });\r\n\r\n\r\n    if (error) return <Error\r\n        msg={error.message}\r\n        onRefresh={() => refetch()}\r\n    />\r\n\r\n    const execFetchMore = () => {\r\n        const { stories: { meta: { pagination } } } = data;\r\n        if (pagination.page < pagination.pageCount) {\r\n            fetchMore({\r\n                variables: {\r\n                    start: data.stories.data.length\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderFooter = (props) => {\r\n        let noMore = false\r\n        if (!loading && !error) {\r\n            const { stories: { meta: { pagination: {\r\n                page, pageCount\r\n            } } } } = data;\r\n            noMore = (page === pageCount)\r\n        }\r\n        return (\r\n            <View style={styles.footer}>\r\n                {networkStatus == NetworkStatus.fetchMore && <ListLoadmoreIndicator />}\r\n                {noMore && <Subheading>{t('No more items at the moment')}</Subheading>}\r\n            </View>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {networkStatus === NetworkStatus.loading ? (\r\n                <ScreenLoadingIndicator />\r\n            ) : (\r\n                <FlatList\r\n                    contentContainerStyle={styles.list}\r\n                    data={flatten(data.stories)}\r\n                    ListHeaderComponent={ListHeader}\r\n                    ListFooterComponent={renderFooter}\r\n                    ListEmptyComponent={() => <ListEmpty onRefresh={() => refetch()} />}\r\n                    ItemSeparatorComponent={null}\r\n                    renderItem={({ item }) => (\r\n                        <StoryItem key={item.id} {...item} navigation={navigation} />\r\n                    )}\r\n                    keyExtractor={(item) => item.id}\r\n                    onEndReachedThreshold={0.2}\r\n                    onEndReached={execFetchMore}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={networkStatus === NetworkStatus.refetch}\r\n                            onRefresh={() => refetch()}\r\n                            title={t('loading stories..')}\r\n                            titleColor={theme.colors.text}\r\n                            colors={theme.colors.primary}\r\n                            tintColor={theme.colors.primary}\r\n                        />\r\n                    }\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    footer: {\r\n        flex: 1,\r\n        paddingBottom: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    list: {\r\n        flexGrow: 1,\r\n        paddingHorizontal: 10,\r\n    },\r\n});\r\nexport default ListStories;\r\n\r\n","import { useGlobals } from \"../contexs/global\";\r\nimport { MALE, FEMALE, BOTH } from \"../constants/session\";\r\n\r\nexport const usePrefers = () => {\r\n  const [{ session }] = useGlobals();\r\n  return session.prefer == MALE ? [ MALE, BOTH]: [FEMALE, BOTH];\r\n}\r\n\r\nexport const usePrefer = () => {\r\n  const [{ session }, dispatch] = useGlobals();\r\n\r\n  const setPrefer = (value) => {\r\n    dispatch({\r\n      type: 'setSession',\r\n      fields: {\r\n        prefer: value,\r\n      },\r\n      save: true, \r\n    })\r\n  }\r\n  return [session.prefer, setPrefer];\r\n}\r\n\r\nexport const useIsFemale = () => {\r\n  const [{ session }, dispatch] = useGlobals();\r\n  \r\n  const switchPrefer = () => {\r\n    dispatch({\r\n      type: 'setSession',\r\n      fields: {\r\n        prefer: session.prefer === MALE ? FEMALE: MALE,\r\n      },\r\n      save: true, \r\n    })\r\n  }\r\n\r\n  return [session.prefer == FEMALE, switchPrefer];\r\n}\r\n  ","// channel.js\r\n\r\nimport * as React from 'react';\r\nimport { useWindowDimensions, StyleSheet } from 'react-native';\r\nimport { useTheme } from 'react-native-paper';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { GET_CATEGORIES } from '../api/graphql/category';\r\nimport flatten from '../utils/flatten';\r\nimport { Error } from '../comps/error';\r\nimport {\r\n  ScreenLoadingIndicator,\r\n  LazyLoadingIndicator\r\n} from '../comps/indicators';\r\n\r\nimport ListStories from '../comps/channels/ListStories';\r\n\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\nimport { useIsFemale } from '../hooks/use-prefer';\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nfunction ChanelScreen() {\r\n  const layout = useWindowDimensions();\r\n  const insets = useSafeAreaInsets();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const isFemale = useIsFemale();\r\n\r\n  const { data, loading, error, refetch, } = useQuery(GET_CATEGORIES, {\r\n    notifyOnNetworkStatusChange: true,\r\n    variables: {\r\n      sort: isFemale ? 'order:DESC': 'order:ASC'\r\n    }\r\n  })\r\n\r\n  if (loading) return <ScreenLoadingIndicator />\r\n  if (error) return <Error onRefresh={() => refetch()} />\r\n\r\n  const categories = flatten(data.categories.data);\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      initialLayout={{ with: layout.width }}\r\n      sceneContainerStyle={{\r\n        paddingTop: insets.top,\r\n        paddingBottom: insets.bottom,\r\n        paddingLeft: insets.left,\r\n        paddingRight: insets.right,\r\n      }}\r\n      screenOptions={{\r\n        tabBarActiveTintColor: theme.colors.secondary,\r\n        tabBarLabelStyle: { fontSize: 10, textTransform: 'none' },\r\n        tabBarItemStyle: { width: 100 },\r\n        tabBarStyle: { backgroundColor: theme.colors.surface },\r\n        lazyPreloadDistance: 1,\r\n        lazyPlaceholder: ()=> <LazyLoadingIndicator msg={t('Loading..')}/>,\r\n        lazy: true,\r\n        animationEnabled: true,\r\n      }}\r\n    >\r\n      {categories.map(({ code, name }) => (\r\n        <Tab.Screen\r\n          key={code}\r\n          name={code}\r\n          options={{\r\n            title: name,\r\n          }}\r\n          component={ListStories}\r\n        />\r\n      ))}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ChanelScreen;\r\n","// chart.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction ChartScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Chart Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default ChartScreen;\r\n","// confirm.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction ConfirmModal({ navigation }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Confirm Modal</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default ConfirmModal;\r\n","// create.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\n\r\nfunction CreatePostScreen({ route, navigation }) {\r\n  const [postText, setPostText] = React.useState('');\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Create Post Screen</Text>\r\n      <TextInput\r\n        multiline\r\n        placeholder=\"What's on your mind?\"\r\n        style={styles.input}\r\n        value={postText}\r\n        onChangeText={(post) => {\r\n          setPostText(post);\r\n\r\n          // update header title via setOptions.\r\n          navigation.setOptions({ title: postText });\r\n        }}\r\n      />\r\n      <Button\r\n        title=\"Done\"\r\n        onPress={() => {\r\n          // Pass and merge params back to home screen\r\n          navigation.navigate('Home', {\r\n            post: postText,\r\n          });\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: 10,\r\n  },\r\n  input: {},\r\n});\r\n\r\nexport default CreatePostScreen;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LIKE_STORY = gql`\r\n    mutation likeStory($storyId: ID!) {\r\n        likeStory(storyId: $storyId) {\r\n            data {\r\n                 id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_STORY_LIKES = gql`\r\n    query getStoryLikes($storyId: ID!) {\r\n        story(id: $storyId) {\r\n        data {\r\n            id\r\n            attributes {\r\n                likes\r\n                liked\r\n            }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const LIKED_STORIES = gql`\r\n    query likedStories($start: Int, $limit: Int) {\r\n        likedStories(pagination: { start: $start, limit: $limit } ) {\r\n        data {\r\n            id\r\n            attributes {\r\n            story {\r\n                data {\r\n                id \r\n                attributes {\r\n                    code\r\n                    title\r\n                    likes\r\n                    createdAt\r\n                }\r\n                }\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n`","import { useState } from \"react\";\r\nimport { LikeButton } from \"./buttons\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\n\r\nimport { LIKE_STORY, GET_STORY_LIKES } from \"../api/graphql/like\";\r\n\r\nfunction Like({ liked, storyId }) {\r\n    const [isLiked, setLiked] = useState(liked);\r\n    const [like, { data, loading, error, reset }] = useMutation(LIKE_STORY, {\r\n        refetchQueries: [\r\n            {\r\n                query: GET_STORY_LIKES, \r\n                variables: {\r\n                    storyId\r\n                },\r\n            }\r\n        ],\r\n    })\r\n    \r\n    return (\r\n        <LikeButton liked={isLiked} onPress={() => {\r\n            setLiked(v => !v)\r\n            like({\r\n                variables: {storyId}\r\n            })\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default Like;","import ImageColors from 'react-native-image-colors';\r\n\r\nasync function colorFor(uri) {\r\n    const result = await ImageColors.getColors(uri, {\r\n        cache: true\r\n    })\r\n\r\n    switch (result.platform) {\r\n        case 'android':\r\n            return {\r\n                background: result.lightVibrant,\r\n                primary: result.average,\r\n            }\r\n        case 'web':\r\n            return {\r\n                background: result.lightVibrant,\r\n                primary: result.vibrant,\r\n            }\r\n        case 'ios':\r\n            return {\r\n                background: result.background,\r\n                primary: result.primary,\r\n            }\r\n        default:\r\n            throw new Error('Unexpected platform key')\r\n    }\r\n}\r\n\r\nexport default colorFor;","import { useEffect, useState } from 'react';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useIsDark } from '../../hooks/use-theme';\r\nimport Animated, { \r\n    useAnimatedStyle, \r\n    interpolateColor, \r\n    useSharedValue, \r\n    withTiming, \r\n    cancelAnimation } from 'react-native-reanimated';\r\n\r\nimport colorFor from '../utils/colors';\r\nconst defaultUri = require('./images/default.jpg');\r\n\r\nconst darkGradient = [\r\n    'rgba(0,0,0,0.3)',\r\n    'rgba(0,0,0,0.4)',\r\n    'rgba(0,0,0,0.3)',\r\n];\r\n\r\nconst lightGradient = [\r\n    'rgba(255,255,255,0.3)',\r\n    'rgba(255,255,255,0.7)',\r\n    'rgba(255,255,255,0.8)',\r\n];\r\n\r\n\r\nconst GradientCover = ({ uri, style, contentStyle, imageStyle, children }) => {\r\n    const progress = useSharedValue(0);\r\n    const [isDark] = useIsDark();\r\n    const [color, setColor] = useState('white');\r\n    \r\n    const rStyle = useAnimatedStyle(() => {\r\n        return {\r\n          backgroundColor: interpolateColor(\r\n            progress.value,\r\n            [0, 1],\r\n            [isDark ? 'black': 'white', color],\r\n            'RGB'\r\n          ),\r\n        };\r\n    });\r\n\r\n    async function fetchColor(link) {\r\n        try {\r\n            const { background, primary } = await colorFor(link);\r\n            setColor(isDark ? primary : background);\r\n            progress.value = withTiming(1 - progress.value, { duration: 1000 });\r\n        }\r\n        catch(e) {}\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchColor(uri || defaultUri)\r\n        return () => {\r\n            cancelAnimation(progress)\r\n        }\r\n    }, [uri, isDark]);\r\n\r\n    return (\r\n        <Animated.View style={[{\r\n            height: 200,\r\n            justifyContent: 'center', \r\n            alignItems: 'center',\r\n        },  rStyle, style]}>\r\n            <LinearGradient\r\n                    colors={isDark ? darkGradient: lightGradient}\r\n                    locations={[0, 0.4, 0.9]}\r\n                    style={[{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                    },contentStyle]}>\r\n                    {children}\r\n                </LinearGradient>\r\n        </Animated.View>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    GradientCover,\r\n}","import { useState } from \"react\";\r\nimport { Dimensions } from 'react-native';\r\nimport Animated, {\r\n    useSharedValue,\r\n    useAnimatedStyle,\r\n    useDerivedValue,\r\n    interpolateColor,\r\n    interpolate, Extrapolate,\r\n  } from 'react-native-reanimated';\r\n\r\nconst G_WIN_WIDTH = Dimensions.get('window').width\r\nexport const SCROLL_HEAD_HEIGHT = 230\r\nexport const FROZE_TOP = 64\r\nconst moveDistance = SCROLL_HEAD_HEIGHT - FROZE_TOP;\r\n\r\nexport default function useScrollAnim() {\r\n    const [scrollTrans, setScrollTrans] = useState(useSharedValue(0));\r\n\r\n    const transXValue = useDerivedValue(() => {\r\n      const left = G_WIN_WIDTH / 2;\r\n      return interpolate(scrollTrans.value,\r\n        [0, moveDistance],\r\n        [0, -left],\r\n        Extrapolate.CLAMP\r\n      )\r\n    });\r\n  \r\n    const transYValue = useDerivedValue(() => {\r\n      return interpolate(scrollTrans.value,\r\n        [0, moveDistance],\r\n        [0, FROZE_TOP],\r\n        Extrapolate.CLAMP\r\n      )\r\n    });\r\n  \r\n    const scaleValue = useDerivedValue(() => {\r\n      return interpolate(scrollTrans.value,\r\n        [0, moveDistance],\r\n        [1, 0.7],\r\n        Extrapolate.CLAMP)\r\n    })\r\n\r\n    const headerOpacityValue = useDerivedValue(() => {\r\n      return interpolate(scrollTrans.value,\r\n        [0,  moveDistance * 0.7, moveDistance * 0.9, moveDistance],\r\n        [1, 0.8, 0, 0],\r\n        Extrapolate.CLAMP);\r\n    });\r\n  \r\n    /** animated style for scroll headers. */\r\n    const scrollHeaderTransStyle = useAnimatedStyle(() => {\r\n      return {\r\n        transform: [\r\n          {\r\n            translateX: transXValue.value\r\n          },\r\n          {\r\n            translateY: transYValue.value\r\n          },\r\n          {\r\n            scale: scaleValue.value\r\n          }\r\n        ],\r\n        opacity: headerOpacityValue.value,\r\n      }\r\n    });\r\n  \r\n    /** animated style for top-bar headers. */\r\n    const titleOpacity = useDerivedValue(() => {\r\n      return interpolate(scrollTrans.value,\r\n        [0, moveDistance * 0.8, moveDistance],\r\n        [0, 0.0, 1],\r\n        Extrapolate.CLAMP);\r\n    });\r\n  \r\n    const titleTransStyle = useAnimatedStyle(() => {\r\n      return {\r\n        opacity: titleOpacity.value,\r\n      }\r\n    });\r\n  \r\n    const makeScrollTrans = (st) => {\r\n      setScrollTrans(st);\r\n    };\r\n  \r\n    return {\r\n        makeScrollTrans, titleTransStyle, scrollHeaderTransStyle\r\n    }\r\n}","import { memo } from \"react\"\r\nimport { View, Image, StyleSheet } from 'react-native';\r\nimport { Title, Caption } from 'react-native-paper';\r\nimport { useHeaderHeight } from '@react-navigation/elements';\r\nimport Animated from \"react-native-reanimated\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { GradientCover } from '../covers';\r\nimport { ViewsIcon, LikesIcon } from '../icons';\r\nimport Tags from '../tags';\r\nimport { SCROLL_HEAD_HEIGHT } from \"../animations/scroll\"\r\nimport { coverUri } from \"../../utils/uri\"\r\n\r\nfunction ScrollHeader({ story, tintColor, scrollHeaderTransStyle }) {\r\n    const { t } = useTranslation();\r\n    const uri = coverUri(story.cover, story.external_cover_url)\r\n    const tags = [...story.categories, { name: story.full ? t('Full') : t('Coming') }]\r\n\r\n    const headerHeight = useHeaderHeight();\r\n\r\n    return (\r\n        <GradientCover uri={uri} style={[\r\n            { height: SCROLL_HEAD_HEIGHT },]\r\n        }>\r\n            <Animated.View style={[\r\n                { marginTop: headerHeight },\r\n                styles.header,\r\n                scrollHeaderTransStyle]}>\r\n                <Image\r\n                    source={uri}\r\n                    resizeMode={\"cover\"}\r\n                    style={styles.cover} />\r\n                <View style={styles.meta}>\r\n                    <Title style={[\r\n                        styles.title, {\r\n                            color: tintColor,\r\n                        }\r\n                    ]}> {story.title} </Title>\r\n                    <Caption>{story.author.name}</Caption>\r\n                    <Tags tags={tags} />\r\n                    <View style={styles.icons}>\r\n                        <ViewsIcon views={story.views} />\r\n                        <LikesIcon likes={story.likes} />\r\n                    </View>\r\n                </View>\r\n            </Animated.View>\r\n        </GradientCover>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        marginHorizontal: 10,\r\n        flexDirection: 'row',\r\n        gap: 20,\r\n        height: 145,\r\n    },\r\n    title: {\r\n        color: 'white'\r\n    },\r\n    cover: {\r\n        width: 112,\r\n        height: 145,\r\n        borderRadius: 5,\r\n    },\r\n    meta: {\r\n        flexDirection: 'column',\r\n        gap: 10,\r\n    },\r\n    icons: {\r\n        flexDirection: 'row',\r\n        gap: 20,\r\n    },\r\n});\r\n\r\nexport default memo(ScrollHeader);","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_STORY_DETAILS = gql`\r\n    query getStoryByCode($code: String!) {\r\n        storyByCode(code: $code) {\r\n        data {\r\n            id\r\n            attributes {\r\n            code\r\n            title\r\n            liked\r\n            external_cover_url\r\n            cover {\r\n                data {\r\n                attributes {\r\n                    url\r\n                }\r\n                }\r\n            }\r\n            author {\r\n                data {\r\n                id\r\n                attributes {\r\n                    code\r\n                    name\r\n                }\r\n                }\r\n            }\r\n            categories {\r\n                data {\r\n                id\r\n                attributes {\r\n                    name\r\n                    code\r\n                }\r\n                }\r\n            }\r\n            last_chapters\r\n            views\r\n            likes\r\n            num_chapters\r\n            text\r\n            full\r\n            updatedAt\r\n            first_chapter_code\r\n            first_chapter_title\r\n            }\r\n        }\r\n        }\r\n    }\r\n`\r\nexport { GET_STORY_DETAILS } ","// details.js\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, Dimensions } from 'react-native';\r\nimport { useHeaderHeight, HeaderTitle } from '@react-navigation/elements';\r\nimport { Surface, Title, IconButton, Caption, Button, Text } from 'react-native-paper';\r\nimport Animated from 'react-native-reanimated';\r\nimport { SceneMap } from 'react-native-tab-view';\r\nimport { HScrollView } from 'react-native-head-tab-view';\r\nimport { CollapsibleHeaderTabView } from 'react-native-tab-view-collapsible-header';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ScreenLoadingIndicator } from '../comps/indicators';\r\nimport { Error, NotFound } from '../comps/error';\r\n\r\nimport { ShareButton } from '../comps/buttons';\r\nimport Like from '../comps/like';\r\nimport { Portal } from 'react-native-paper';\r\nimport { useIsDark } from '../hooks/use-theme';\r\nimport ScrollHeader from '../comps/details/scroll-header';\r\nimport useScrollAnim, {FROZE_TOP} from '../comps/animations/scroll';\r\nimport { GET_STORY_DETAILS } from '../api/graphql/story';\r\nimport flatten from '../utils/flatten';\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nconst StoryDetailRoute = () => (\r\n  <HScrollView index={0}>\r\n    <View style={[styles.scene, { backgroundColor: '#ff4081' }]} />\r\n  </HScrollView>\r\n);\r\n\r\nconst ChapterListRoute = () => (\r\n  <HScrollView index={1}>\r\n    <View style={[styles.scene, { backgroundColor: '#673ab7' }]} />\r\n  </HScrollView>\r\n);\r\n\r\nfunction StoryTabView({ route, navigation }) {\r\n  const { storyCode } = route.params;\r\n  const { t } = useTranslation();\r\n  const [isDark] = useIsDark();\r\n  const headerHeight = useHeaderHeight();\r\n  const [index, setIndex] = React.useState(0);\r\n  const [routes] = React.useState([\r\n    { key: 'detail', title: t('Details') },\r\n    { key: 'chapters', title: t('Chapters') },\r\n  ]);\r\n\r\n  const { data, loading, error, refetch, } = useQuery(GET_STORY_DETAILS, {\r\n    notifyOnNetworkStatusChange: true,\r\n    variables: {\r\n      code: storyCode || 'The_Da_Vinci_Code' // TODO: remove.\r\n    }\r\n  })\r\n\r\n  const { titleTransStyle, scrollHeaderTransStyle, makeScrollTrans } = useScrollAnim();\r\n\r\n  const tintColor = isDark ? 'white' : 'black';\r\n\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerTitle: () => (<Animated.View style={titleTransStyle}>\r\n        <HeaderTitle>\r\n          {story?.title}\r\n        </HeaderTitle>\r\n      </Animated.View>),\r\n      headerTintColor: tintColor,\r\n      headerRight: ({ size, color }) => (\r\n        <View style={styles.barItem}>\r\n          <IconButton\r\n            onPress={() => navigation.push('Search')}\r\n            icon=\"search\"\r\n            iconColor={color}\r\n            size={size}\r\n          />\r\n          <IconButton\r\n            onPress={() => navigation.push('Channel')}\r\n            icon=\"md-grid-outline\"\r\n            iconColor={color}\r\n            size={size}\r\n          />\r\n        </View>\r\n      ),\r\n    });\r\n  }, [titleTransStyle, navigation]);\r\n\r\n  if (loading) return <ScreenLoadingIndicator />\r\n  if (error) return <Error onRefresh={() => refetch()} />\r\n  if (!data?.storyByCode?.data) {\r\n    return <NotFound back={() => navigation.goBack()} />\r\n  }\r\n\r\n  const renderScene = SceneMap({\r\n    detail: StoryDetailRoute,\r\n    chapters: ChapterListRoute,\r\n  });\r\n\r\n  const story = flatten(data.storyByCode.data);\r\n\r\n  return (\r\n    <>\r\n      <CollapsibleHeaderTabView\r\n        headerHeight={headerHeight}\r\n        renderScrollHeader={() => \r\n          <ScrollHeader scrollHeaderTransStyle={scrollHeaderTransStyle} \r\n                        story={story} \r\n                        tintColor={tintColor} />}\r\n        navigationState={{ index, routes }}\r\n        renderScene={renderScene}\r\n        onIndexChange={setIndex}\r\n        initialLayout={initialLayout}\r\n        frozeTop={FROZE_TOP}\r\n        makeScrollTrans={makeScrollTrans}\r\n      />\r\n      <Portal>\r\n        <Surface elevation={1} style={styles.bottomBar}>\r\n          <ShareButton />\r\n          <Like liked={story.liked} storyId={story.id} />\r\n          <Button style={styles.start}\r\n            textColor='white'\r\n            mode=\"contained\" onPress={() => console.log('Start View')}>\r\n            {t('Start')}\r\n          </Button>\r\n        </Surface>\r\n      </Portal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scene: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    marginHorizontal: 10,\r\n    flexDirection: 'row',\r\n    gap: 20,\r\n    height: 145,\r\n  },\r\n  title: {\r\n    color: 'white'\r\n  },\r\n  cover: {\r\n    width: 112,\r\n    height: 145,\r\n    borderRadius: 5,\r\n  },\r\n  meta: {\r\n    flexDirection: 'column',\r\n    gap: 10,\r\n  },\r\n  icons: {\r\n    flexDirection: 'row',\r\n    gap: 20,\r\n  },\r\n  barItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  bottomBar: {\r\n    width: '100%',\r\n    height: 64,\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: 30,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n  },\r\n  start: {\r\n    flexGrow: 1,\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n  }\r\n});\r\n\r\nexport default StoryTabView;\r\n","// explorer.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction ExplorerScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Explorer Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scene: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default ExplorerScreen;\r\n","\r\nimport * as React from 'react';\r\nimport { View, Image, StyleSheet } from 'react-native';\r\nimport {\r\n    Subheading,\r\n    TouchableRipple,\r\n} from 'react-native-paper';\r\n\r\nimport { coverUri } from '../../utils/uri';\r\n\r\nconst StoryItem = React.memo(({ navigation, id, code, title, cover, external_cover_url }) => (\r\n    <TouchableRipple style={styles.container} onPress={()=> navigation.push('Details', {\r\n        storyCode: code,\r\n    }) }>\r\n        <>\r\n        <Image source={{uri: coverUri(cover, external_cover_url)}} style={styles.image} resizeMode={'cover'} />\r\n        <Subheading>{title}</Subheading>\r\n        </>\r\n    </TouchableRipple>\r\n));\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginVertical: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 2 / 3,\r\n        marginRight: 10,\r\n        borderRadius: 5,\r\n    },\r\n});\r\n\r\nexport default StoryItem;","\r\nimport * as React from 'react';\r\nimport { View, Image, StyleSheet, FlatList } from 'react-native';\r\nimport {\r\n    Subheading,\r\n    Headline,\r\n    Title,\r\n    TouchableRipple,\r\n    Button,\r\n    Caption,\r\n} from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { coverUri } from '../../utils/uri';\r\n\r\nfunction hasMeta(view) {\r\n    if(view === 'gridlarge') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction screenOf(screen) {\r\n    if(!screen) return screen;\r\n    if(screen === 'explore') return 'Explorer'\r\n    if(screen === 'channel') return 'Channel'\r\n    if(screen === 'rank')    return '#DHChart'\r\n    return null;\r\n}\r\n\r\nfunction numColumsOf(view) {\r\n    if(view === 'gridlarge') return 2\r\n    if(view === 'gridsmall') return 3\r\n    return 1;\r\n}\r\n\r\nfunction storiesOf(stories, view) {\r\n    if(view === 'gridlarge') return stories.slice(0, 4)\r\n    if(view === 'gridsmall') {\r\n        if (stories.length >= 6) {\r\n            return stories.slice(0, 6)\r\n        }\r\n        return stories.slice(0, 3)\r\n    }\r\n    return stories;\r\n}\r\n\r\nfunction itemStyleOf(index, view) {\r\n    if(view === 'gridlarge') return {\r\n        marginLeft: (index > 0 && index % 2 !== 0) ? 10: 0,\r\n    }\r\n    if(view === 'gridsmall') return {\r\n        marginLeft: (index > 0 && index % 3 !== 0) ? 10: 0,\r\n    }\r\n    return {\r\n        marginLeft: index > 0 ? 10: 0,\r\n    }\r\n}\r\n\r\nfunction waperStyleOf(stdStories, view) {\r\n    if(view === 'gridsmall') {\r\n        if (stdStories.length >= 6) {\r\n            return {minHeight: 500}\r\n        }\r\n        return {minHeight: 245}\r\n    }\r\n    if(view === 'gridlarge') return {\r\n        minHeight: 500, \r\n    }\r\n    if(view === 'hzlarge') return {\r\n        minHeight: 310, \r\n    }\r\n    if(view === 'hzsmall') return {\r\n        minHeight: 200, \r\n    }\r\n    return {}\r\n}\r\n\r\nconst Item = ({ navigation, view, style, id, code, title, cover, author, external_cover_url }) => {    \r\n    return (\r\n        <TouchableRipple key={id} style={[style, styles[view].item]} onPress={()=> navigation.push('Details', {\r\n            storyCode: code,\r\n        }) }>\r\n            <>\r\n            <Image source={{uri: coverUri(cover, external_cover_url)}} \r\n                   style={styles[view].image} resizeMode={'cover'} />\r\n            <Subheading>{title}</Subheading>\r\n            {hasMeta(view) && <Caption style={styles[view].authorName}>{author.name}</Caption>}\r\n            </>\r\n        </TouchableRipple>\r\n    )\r\n};\r\n\r\nconst Collection = React.memo(({ navigation, theme, t, id, code, name, icon, view, screen, stories }) => {\r\n    const stdStories = storiesOf(stories, view);\r\n    const moreLink = screenOf(screen);\r\n\r\n    return (<View style={[waperStyleOf(stdStories, view), styles[view].container]} onPress={()=> {}}>\r\n        <View style={styles[view].headline}>\r\n            <View style={styles[view].leftTitle}>\r\n                <Icon size={24} color={theme.colors.accent} name={icon}/>\r\n                <Subheading style={styles[view].titleText}>{name}</Subheading>\r\n            </View>\r\n            {moreLink && \r\n                <TouchableRipple style={styles[view].rightTitle} \r\n                                 onPress={()=> navigation.navigate(moreLink, {code})} >\r\n                    <>\r\n                        <Caption labelStyle={styles[view].moreLabel}>{t('More')}</Caption>\r\n                        <Icon size={10} name={'chevron-forward'}/>\r\n                    </>\r\n                </TouchableRipple>\r\n            }\r\n        </View>\r\n        <FlatList\r\n            style={styles[view].list}\r\n            horizontal={view.startsWith('hz')}\r\n            scrollEnabled={view.startsWith('hz')}\r\n            numColumns={numColumsOf(view)}\r\n            data={stdStories}\r\n            ItemSeparatorComponent={() => <View style={{height: 30}} />}    \r\n            keyExtractor={(item) => item.id}\r\n            renderItem={({ index, item }) => <Item \r\n                navigation={navigation} \r\n                view={view} {...item}\r\n                style={itemStyleOf(index, view)}\r\n            />}\r\n        />\r\n    </View>\r\n    )}\r\n);\r\n\r\nconst baseStyles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n    },\r\n    headline: {\r\n        // flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        height: 35,\r\n    },\r\n    titleText: {\r\n        textAlign: 'left',\r\n    },\r\n    leftTitle: {\r\n        flex: 10,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        columnGap: 5,\r\n    },\r\n    rightTitle: {\r\n        flex: 2,\r\n        flexDirection: 'row',\r\n        columnGap: 1,\r\n        alignItems: 'center',\r\n    },\r\n    moreLabel: {\r\n        fontSize: 8,\r\n    },\r\n    list: {\r\n        flex: 1,\r\n        gap: 5,\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        width: \"49.5%\",\r\n    },\r\n    image: {\r\n        height: 135,\r\n        borderRadius: 5,\r\n    },\r\n    storyTitle: {},\r\n    authorName: {},\r\n\r\n});\r\nconst hzSmallStyles = StyleSheet.create({\r\n    ...baseStyles,\r\n    item: {\r\n        ...baseStyles.item,\r\n        width: 164,\r\n    },\r\n    image: {\r\n        ...baseStyles.image,\r\n        height: 100,\r\n    },\r\n});\r\nconst hzLargeStyles = StyleSheet.create({\r\n    ...hzSmallStyles,\r\n    item: {\r\n        ...hzSmallStyles.item,\r\n        width: 164,\r\n    },\r\n    image: {\r\n        ...hzSmallStyles.image,\r\n        height: 216,\r\n    },\r\n});\r\nconst gridSmallStyles = StyleSheet.create({\r\n    ...baseStyles,\r\n    list: {\r\n    },\r\n    item: {\r\n        ...baseStyles.item,\r\n        width: \"33%\",\r\n    },\r\n    image: {\r\n        ...baseStyles.image,\r\n        height: 150,\r\n    },\r\n});\r\nconst gridLargeStyles = StyleSheet.create({\r\n    ...gridSmallStyles,\r\n    list: {\r\n        ...gridSmallStyles.list,\r\n    },\r\n    item: {\r\n        ...gridSmallStyles.item,\r\n        width: '49.5%',\r\n    },\r\n    image: {\r\n        ...gridSmallStyles.image,\r\n        height: 135,\r\n    }\r\n});\r\n\r\nconst styles = {\r\n    hzlarge: hzLargeStyles,\r\n    hzsmall: hzSmallStyles,\r\n    gridlarge: gridLargeStyles,\r\n    gridsmall: gridSmallStyles\r\n};\r\n\r\nexport default Collection;","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_TOP_COLLECTIONS = gql`\r\n    query getTopCollections($segments: [String!], $start: Int, $limit: Int) {\r\n        collections(\r\n            sort: \"order\", \r\n            filters: { segment: { in: $segments}},\r\n            pagination: { start: $start, limit: $limit } ) {\r\n        meta {\r\n            pagination {\r\n                total\r\n                page\r\n                pageSize\r\n                pageCount\r\n            }\r\n        }\r\n        data {\r\n            id\r\n            attributes {\r\n            screen\r\n            code\r\n            name\r\n            view\r\n            icon\r\n            stories {\r\n                data {\r\n                id\r\n                attributes {\r\n                    code\r\n                    title\r\n                    external_cover_url\r\n                    cover {\r\n                    data {\r\n                        id\r\n                        attributes {\r\n                        url\r\n                        }\r\n                    }\r\n                    }\r\n                    author {\r\n                        data {\r\n                          id\r\n                          attributes {\r\n                            code\r\n                            name\r\n                          }\r\n                        }\r\n                      }\r\n                    updatedAt\r\n                }\r\n                }\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n  `\r\nexport {\r\n    GET_TOP_COLLECTIONS\r\n}","// section list | horizontal list\r\n\r\nimport * as React from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    FlatList,\r\n    SectionList,\r\n    RefreshControl,\r\n} from 'react-native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, Subheading, Headline, useTheme } from 'react-native-paper';\r\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\r\nimport { usePrefers } from '../../hooks/use-prefer';\r\n\r\nimport { Error } from '../error';\r\nimport { ListLoadmoreIndicator, ScreenLoadingIndicator } from '../indicators';\r\nimport { ListHeader, ItemSeparator, ListEmpty } from '../list';\r\nimport StoryItem from './StoryItem';\r\nimport Collection from './Collection';\r\n\r\nimport flatten from '../../utils/flatten';\r\n\r\nimport { GET_TOP_COLLECTIONS } from '../../api/graphql/collection';\r\n\r\n\r\nconst StoriesCollections = ({ route, navigation }) => {\r\n    const theme = useTheme();\r\n    const { t } = useTranslation();\r\n    const segments = usePrefers();\r\n\r\n    const { loading, error, data, fetchMore, refetch, networkStatus } = useQuery(GET_TOP_COLLECTIONS, {\r\n        notifyOnNetworkStatusChange: true,\r\n        variables: {\r\n            segments: segments\r\n        },\r\n    });\r\n\r\n\r\n    if (error) return <Error\r\n        msg={error.message}\r\n        onRefresh={() => refetch()}\r\n    />\r\n\r\n    if (loading) return <ScreenLoadingIndicator />\r\n    \r\n    let collections = flatten(data.collections)\r\n    // collections = [collections[0]];\r\n    // console.log(collections);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {collections.map(c => <Collection \r\n                                    key={c.id} {...c} \r\n                                    //view={'gridlarge'}\r\n                                    t={t}\r\n                                    navigation={navigation} \r\n                                    theme={theme} />)}\r\n        </View>\r\n    )\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // flex: 1,\r\n        flexDirection: 'column',\r\n        paddingHorizontal: 10,\r\n        paddingBottom: 10,\r\n        rowGap: 20,\r\n        // backgroundColor: 'orange',\r\n    },\r\n    footer: {\r\n        flex: 1,\r\n        paddingBottom: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n});\r\nexport default StoriesCollections;\r\n\r\n","import React from \"react\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n} from \"react-native\";\r\n\r\nexport const ImageItem = ({\r\n  style,\r\n  index: _index,\r\n  showIndex = true,\r\n}) => {\r\n  const index = (_index || 0) + 1;\r\n  const source = React.useRef({\r\n    uri: `https://picsum.photos/id/${index}/400/300`,\r\n  }).current;\r\n\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <ActivityIndicator size=\"small\" />\r\n      <Image key={index} style={styles.image} source={source} />\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          color: \"white\",\r\n          fontSize: 40,\r\n          backgroundColor: \"#333333\",\r\n          borderRadius: 5,\r\n          overflow: \"hidden\",\r\n          paddingHorizontal: 10,\r\n          paddingTop: 2,\r\n        }}\r\n      >\r\n        {showIndex ? index : \"\"}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 8,\r\n    overflow: \"hidden\",\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n});","const ScreenIds = {\r\n    Preference: 'Preference',\r\n    Login: 'Login',\r\n    Register: 'Register',\r\n    Chart: '#DHChart',\r\n    Home: 'Home',\r\n    Channel: 'Channel',\r\n    Genre: 'Genre',\r\n    Explorer: 'Explorer',\r\n    Search: 'Search',\r\n    Details: 'Details',\r\n    Me: 'Me',\r\n    Libarary: 'Library',\r\n    Wallet: 'Wallet',\r\n    Music: 'Music',\r\n    Inboxes:  'Inboxes',\r\n    Settings: 'Settings',\r\n    Reading: 'Reading',\r\n    NotFound: 'NotFound',\r\n    Test: 'Test',\r\n    Test2: 'Test2',\r\n}\r\n\r\nexport default ScreenIds;","import { View, StyleSheet } from 'react-native';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Caption, IconButton, TouchableRipple, Colors, useTheme } from 'react-native-paper';\r\nimport ScreenIds from '../../constants/screens';\r\n\r\nfunction LinkItem({navigation, icon, circleColor, title, onPress}) {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <TouchableRipple style={styles.item} onPress={onPress}>\r\n            <>\r\n                <View style={[styles.circle, {backgroundColor: circleColor}]}>\r\n                    <Icon size={22} color={theme.colors.accent} name={icon}/>\r\n                </View>\r\n                <Caption>{title}</Caption>    \r\n            </>\r\n        </TouchableRipple>\r\n    )\r\n}\r\n\r\nfunction FeatureLinks({ navigation }) {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <View style={styles.container}>\r\n            <LinkItem \r\n                navigation={navigation}\r\n                icon={'stats-chart'}\r\n                circleColor={'#FDF49C'}\r\n                title={t('Ranking')}\r\n                onPress={()=> navigation.navigate(ScreenIds.Chart)}\r\n            />\r\n            <LinkItem \r\n                navigation={navigation}\r\n                icon={'color-palette-outline'}\r\n                circleColor={'#D3F1FF'}\r\n                title={t('Genre')}\r\n                onPress={()=> navigation.push(ScreenIds.Channel)}\r\n            />\r\n            <LinkItem \r\n                navigation={navigation}\r\n                icon={'fitness-outline'}\r\n                circleColor={'#FECD80'}\r\n                title={t('Point')}\r\n                onPress={()=> navigation.navigate(ScreenIds.Wallet)}\r\n            />\r\n            <LinkItem \r\n                navigation={navigation}\r\n                icon={'headset'}\r\n                circleColor={'#BBF8C6'}\r\n                title={t('Music')}\r\n                onPress={()=> navigation.navigate(ScreenIds.Music)}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n    //   flex: 1,\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      flexDirection: 'row',\r\n    //   backgroundColor: 'red',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 30,\r\n      gap: 5,\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        // backgroundColor: 'green',\r\n        padding: 5,\r\n    },\r\n    circle: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: 50,\r\n        height: 50,\r\n        backgroundColor: 'violet',\r\n        padding: 3,\r\n        borderRadius: 30,\r\n    }\r\n  });\r\n\r\nexport default FeatureLinks;","import { StyleSheet, Text, Button, ViewStyle, View } from 'react-native';\r\nimport React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { Modal } from 'react-native-paper';\r\n\r\nimport Animated, {\r\n    interpolate,\r\n    Extrapolate,\r\n    useSharedValue,\r\n    withTiming,\r\n    withSpring,\r\n    useAnimatedStyle,\r\n    Easing\r\n} from 'react-native-reanimated';\r\n\r\nexport const FlipSide = {\r\n    FRONT: 0,\r\n    BACK: 1\r\n}\r\n\r\nconst ReanimatedFlip = ({\r\n    front,\r\n    back,\r\n    side=null,\r\n    style={},\r\n    slideStyle={},\r\n    frontStyle={},\r\n    backStyle={},\r\n    duration = 500,\r\n    easing = Easing.bezier(0.5, 0.01, 0, 1),\r\n    modal = false,\r\n}) => {\r\n    const [visible, setVisible] = useState(true);\r\n    const spin = useSharedValue(0);\r\n    const fStyle = useAnimatedStyle(() => {\r\n        const spinV = interpolate(spin.value, [0, 1], [0, 180]);\r\n        return {\r\n            transform: [{\r\n                rotateY: withTiming(`${spinV}deg`, { duration, easing })\r\n            }]\r\n        }\r\n    });\r\n    const bStyle = useAnimatedStyle(() => {\r\n        const spinV = interpolate(spin.value, [0, 1], [180, 360]);\r\n        return {\r\n            transform: [{\r\n                rotateY: withTiming(`${spinV}deg`, { duration,  easing })\r\n            }]\r\n        }\r\n    });\r\n\r\n    const hide = ()=> {\r\n        setVisible(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        spin.value = side\r\n        setVisible(true)\r\n\r\n        const autoHide = setTimeout(()=> {\r\n            setVisible(false)\r\n        }, 1000)\r\n        return ()=> {\r\n            clearTimeout(autoHide);\r\n        }\r\n    }, [side])\r\n\r\n\r\n    const animated = (\r\n        <View style={[styles.container, style]}>\r\n            <Animated.View style={[styles.slide, styles.front, slideStyle, frontStyle, fStyle]}>\r\n                {front}\r\n            </Animated.View>\r\n            <Animated.View style={[styles.slide, styles.back, slideStyle, backStyle, bStyle]}>\r\n                {back}\r\n            </Animated.View>\r\n        </View>\r\n    )\r\n    \r\n    return modal ? (\r\n        <Modal style={styles.modal} visible={visible} onDismiss={hide}>\r\n            {animated}\r\n        </Modal>\r\n    ): animated\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    modal: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    slide: {\r\n        height: 400,\r\n        width: 250,\r\n        borderRadius: 16,\r\n        backfaceVisibility: \"hidden\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"absolute\",\r\n    },\r\n    front: {\r\n    },\r\n    back: {\r\n    },\r\n});\r\n\r\nexport default ReanimatedFlip;","export const femaleImgUri = require('./images/f-3.png');\r\nexport const maleImgUri = require('./images/m-1.png');","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { TouchableRipple, Avatar } from \"react-native-paper\";\r\nimport FlipCard, { FlipSide} from \"../animations/flip\";\r\nimport { useIsFemale } from \"../../hooks/use-prefer\";\r\nimport { femaleImgUri, maleImgUri } from \"./icon\";\r\n\r\nconst CardView = ({size, iconUri}) => (\r\n    <Avatar.Image size={size} source={iconUri} style={{backgroundColor: 'transparent'}}/>\r\n)\r\n\r\nexport function PreferSwitch({size=30}) {\r\n    const [isFemale, switchPrefer] = useIsFemale();\r\n    const style = { width: size, height: size};\r\n\r\n    return (\r\n        <TouchableRipple onPress={switchPrefer}>\r\n            <View style={styles.container}>\r\n                <FlipCard\r\n                    side={isFemale ? FlipSide.FRONT: FlipSide.BACK}\r\n                    style={[styles.flip, style]}\r\n                    slideStyle={[styles.slide, style]}\r\n                    frontStyle={styles.front}\r\n                    backStyle={styles.back}\r\n                    front={<CardView size={size} iconUri={femaleImgUri} />}\r\n                    back={<CardView size={size} iconUri={maleImgUri}/>}\r\n                />\r\n            </View>\r\n        </TouchableRipple> \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    flip: {\r\n        height: 40,\r\n        width: 40,\r\n        backgroundColor: 'transparent',\r\n    },\r\n    slide: {\r\n        width: 40,\r\n        height: 40,\r\n        backgroundColor: 'transparent',\r\n    },\r\n    front: {\r\n        backgroundColor: 'rgb(188, 69, 152)',\r\n    },\r\n    back: {\r\n        backgroundColor: 'rgb(187, 248, 198)',\r\n    },\r\n});","// home.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, Button, StyleSheet, ScrollView } from 'react-native';\r\nimport { Divider, IconButton } from 'react-native-paper';\r\nimport StoriesCollections from '../comps/home/StoriesCollections'; \r\nimport TopCarousel from '../comps/home/TopCarousel';\r\nimport FeatureLinks from '../comps/home/Features';\r\nimport { PreferSwitch } from '../comps/prefer/switch';\r\n\r\nfunction HomeScreen({ route, navigation }) {\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: ({ size, color }) => (\r\n        <View style={styles.barItem}>\r\n          <IconButton\r\n            onPress={() => navigation.push('Test')}\r\n            icon=\"home\"\r\n            iconColor={color}\r\n            size={size}\r\n          />\r\n          {/* <PreferSwitch size={size}/> */}\r\n          <IconButton\r\n            onPress={() => navigation.push('Search')}\r\n            icon=\"search\"\r\n            iconColor={color}\r\n            size={size}\r\n          />\r\n          <IconButton\r\n            onPress={() => navigation.push('Channel')}\r\n            icon=\"md-grid-outline\"\r\n            iconColor={color}\r\n            size={size}\r\n          />\r\n        </View>\r\n      ),\r\n    });\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* <TopCarousel navigation={navigation}/> */}\r\n      {/* <FeatureLinks navigation={navigation}/> */}\r\n      <StoriesCollections navigation={navigation}/>\r\n      <Divider />\r\n      {/* <StoriesCollections /> */}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //flexDirection: 'row',\r\n  },\r\n  barItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n","const queryBy = async (page, limit = 5) => {\r\n  const ok = await new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, 500);\r\n  });\r\n\r\n  const items = [];\r\n  for (let i = limit * (page - 1); i < limit * page; i++) {\r\n    items.push({\r\n      id: i,\r\n      title: 'msg -' + i,\r\n      desc: 'msg from system',\r\n      text: 'text text text',\r\n      updated: '1 ngay truoc',\r\n    });\r\n  }\r\n  const totalPage = 10;\r\n  const total = totalPage * limit;\r\n  return {\r\n    page,\r\n    limit,\r\n    total,\r\n    totalPage,\r\n    items,\r\n  };\r\n};\r\n\r\nexport { queryBy };\r\n","import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { List, Caption } from 'react-native-paper';\r\n\r\nconst InboxItem = ({ title, desc, updated }) => (\r\n  <List.Item\r\n    style={styles.item}\r\n    title={title}\r\n    description={desc}\r\n    left={(props) => <List.Icon {...props} icon=\"notifications\" />}\r\n    right={(props) => <Caption>{updated}</Caption>}\r\n    onPress={() => {\r\n      alert('selected.');\r\n    }}\r\n  />\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    flex: 1,\r\n    padding: 20,\r\n    fontSize: 15,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default React.memo(InboxItem);\r\n","// inbox.js\r\n\r\nimport * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { View, FlatList, StyleSheet, RefreshControl } from 'react-native';\r\nimport {\r\n  Text,\r\n  List,\r\n  Caption,\r\n  Button,\r\n  useTheme,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\n\r\nimport { queryBy } from '../api';\r\nimport InboxItem from '../comps/inbox/item';\r\nimport { ListLoadmoreIndicator } from '../comps/indicators';\r\nimport { ListHeader, ItemSeparator, ListEmpty } from '../comps/list';\r\n\r\nfunction InboxScreen({ navigation }) {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n  const [moreLoading, setMoreLoading] = React.useState(false);\r\n\r\n  const [data, setData] = React.useState([]);\r\n  const [totalPage, setTotalPage] = React.useState(1);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const onRefresh = React.useCallback(async () => {\r\n    setRefreshing(true);\r\n\r\n    setTimeout(() => {\r\n      setRefreshing(false);\r\n      // todo\r\n    }, 1000);\r\n  }, [refreshing]);\r\n\r\n  const fetchMore = React.useCallback(async () => {\r\n    console.log('receive event fetchMore: ', page, totalPage);\r\n    if (!moreLoading && page < totalPage) {\r\n      setPage((prev) => prev + 1);\r\n      console.log('page -> ', page);\r\n    }\r\n  });\r\n\r\n  const requestAPI = React.useCallback(async () => {\r\n    if (page == 1) {\r\n      setLoading(true);\r\n    } else {\r\n      setMoreLoading(true);\r\n    }\r\n\r\n    const ret = await queryBy(page);\r\n    console.log('request api ret: ', ret);\r\n    if (page == 1) {\r\n      setLoading(false);\r\n    } else {\r\n      setMoreLoading(false);\r\n    }\r\n    setData([...data, ...ret.items]);\r\n    setTotalPage(ret.totalPage);\r\n  }, [page]);\r\n\r\n  React.useEffect(() => {\r\n    requestAPI();\r\n    console.log('fetch api for page: ', page, 'in: ', totalPage);\r\n  }, [page]);\r\n\r\n  const renderFooter = React.memo((props) => (\r\n    <View style={styles.footer}>\r\n      {moreLoading && <ListLoadmoreIndicator />}\r\n      {page === totalPage && <Caption>No more items at the moment</Caption>}\r\n    </View>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <View style={styles.loading}>\r\n          <ActivityIndicator size=\"large\" />\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={styles.list}\r\n          data={data}\r\n          ListHeaderComponent={ListHeader}\r\n          ListFooterComponent={renderFooter}\r\n          ListEmptyComponent={() => <ListEmpty onRefresh={onRefresh} />}\r\n          ItemSeparatorComponent={ItemSeparator}\r\n          renderItem={({ item }) => (\r\n            <InboxItem\r\n              title={item.title}\r\n              desc={item.desc}\r\n              updated={item.updated}\r\n            />\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n          onEndReachedThreshold={0.2}\r\n          onEndReached={fetchMore}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              title={t('loading inboxes')}\r\n              titleColor={theme.colors.text}\r\n              colors={theme.colors.primary}\r\n              tintColor={theme.colors.primary}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    gap: 10,\r\n    borderColor: 'red',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  empty: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    paddingBottom: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  list: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    padding: 20,\r\n    fontSize: 15,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default InboxScreen;\r\n","// library.js\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Surface, Text } from 'react-native-paper';\r\n\r\nfunction LibraryScreen({ navigation }) {\r\n  return (\r\n    <>\r\n      <Surface style={styles.surface}>\r\n        <Text>Surface</Text>\r\n      </Surface>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    gap: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  surface: {\r\n    flex: 1,\r\n    padding: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    elevation: 4,\r\n  },\r\n});\r\n\r\nexport default LibraryScreen;\r\n","// me.js\r\n\r\nimport * as React from 'react';\r\nimport { View, ScrollView, StyleSheet } from 'react-native';\r\nimport { Surface, Text } from 'react-native-paper';\r\n\r\n// import { NoLogin, BookLibs } from '../comps/me/status';\r\n\r\n\r\nfunction MeScreen({ navigation }) {\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n        {/* <NoLogin />\r\n        <BookLibs />\r\n        <BookLibs /> */}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    gap: 10,\r\n  },\r\n});\r\n\r\nexport default MeScreen;\r\n","// notfound.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction NotFoundScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>404</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default NotFoundScreen;\r\n","// chapter reading.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction ReadingScreen({ route, navigation }) {\r\n  const { storyId, storyCode, chapterId, chapterCode } = route.params;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Reading Screen</Text>\r\n      <Text>\r\n        Story: {storyId}, {storyCode}\r\n      </Text>\r\n      <Text>\r\n        Chapter: {chapterId}, {chapterCode}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default ReadingScreen;\r\n","// home.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Searchbar } from 'react-native-paper';\r\n\r\nfunction SearchScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState('');\r\n  const onChangeSearch = (query) => setSearchQuery(query);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Search Screen</Text>\r\n      <Searchbar\r\n        placeholder=\"Search\"\r\n        onChangeText={onChangeSearch}\r\n        value={searchQuery}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default SearchScreen;\r\n","import React from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { client } from '../../api/client';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Storer from '../../utils/storer';\r\nimport { TOKEN_KEY } from '../../constants/session';\r\n\r\n// TODO: dispatch event ?\r\nfunction LogoutButton() {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <Button onPress={async ()=> {\r\n            Storer.delete(TOKEN_KEY)\r\n            client.resetStore()\r\n        }}>\r\n            {t('Logout')}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default LogoutButton;","import React from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { client } from '../../api/client';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Storer from '../../utils/storer';\r\nimport { TOKEN_KEY } from '../../constants/session';\r\n\r\n// TODO: REMOVE\r\nconst TOKEN_1 = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgzNzkzMjA0LCJleHAiOjE2OTE1NjkyMDR9.v4xJUZkwgNJv6sYnIxOj1s6_alyNzcoZX_r20KCs4DQ';\r\nconst TOKEN_2 = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjgzNzkzMjE4LCJleHAiOjE2OTE1NjkyMTh9.7d7SUAD7JRNwJkRrXpce66Wrvzx5rqdwdgVMZoNbly8';\r\n\r\n\r\nfunction AutoSignButton() {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <>\r\n            <Button onPress={async ()=> {\r\n                await Storer.set(TOKEN_KEY, TOKEN_1)\r\n            }}>\r\n                {t('Auto Login - 1')}\r\n            </Button>\r\n            <Button onPress={async ()=> {\r\n                await Storer.set(TOKEN_KEY, TOKEN_2)\r\n            }}>\r\n                {t('Auto Login - 2')}\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AutoSignButton;","export const PLAYER_KEY = 'player-key';\r\nexport const MODE_LARGE = 1;\r\nexport const MODE_DRIVING = 2;\r\nexport const MODE_MINI = 3;\r\nexport const MODES = [MODE_LARGE, MODE_DRIVING, MODE_MINI];\r\nexport const CDN_URL = \"https://d3s74ckfzt90x9.cloudfront.net\"\r\n\r\n/** == Background Music Configs === */\r\nexport const BM_DB = [\r\n    { label: 'Thư giãn 1', key: 'bg-1.mp3',}, \r\n    { label: 'Thư giãn 2', key: 'bg-2.mp3',},\r\n    { label: 'Thư giãn 3', key: 'bg-3.mp3', },\r\n    { label: 'Thư giãn Ghibli', key: 'bg-4.mp3',},\r\n    { label: 'Cung cấm', key: 'bg-5.mp3',}\r\n];\r\nexport const BM_FILEs = BM_DB.map(o => o.key);\r\nexport const BM_URIs = BM_FILEs.map(name => `${CDN_URL}/${name}`)\r\n\r\nexport const BM_LOOPING_TYPE_ALL = 0;\r\nexport const BM_LOOPING_TYPE_ONE = 1;\r\n\r\n/** == System Sound Configs === */\r\n// export const TEST_M3U8 = \"https://playertest.longtailvideo.com/adaptive/alt-audio-no-video/sintel/playlist.m3u8\";\r\n\r\nexport const TEST_HLS_FILEs = [\"test-hls-1/index.m3u8\"]\r\nexport const GH_HOST_MEDIA = \"https://pysync.github.io/maudi-web/static/media\";\r\n\r\nexport const HLS_URIs = TEST_HLS_FILEs.map(name => `${GH_HOST_MEDIA}/${name}`);\r\n\r\nexport const SYS_SOUND_DB = [\r\n    { tag: \"thanks\", id: \"thanks-1.wav\",},\r\n    { tag: \"end\", id: \"end.wav\", },\r\n    { tag: \"next\", id: \"next-chapter-1.wav\", },\r\n    { tag: \"donates\", id: \"donate-1.wav\", },\r\n    { tag: \"donates\", id: \"donate-2.wav\",},\r\n    { tag: \"source\", id: \"source-1.wav\", }\r\n];\r\nexport const SYS_SOUD_FILEs = SYS_SOUND_DB.map(o => o.id);\r\nexport const SYS_SOUD_URIs = SYS_SOUD_FILEs.map(name => `${CDN_URL}/${name}`)\r\n\r\n/** local player saver time-step in miniseconds */\r\nexport const SAVER_REMOTE_TIME_STEP = 60 * 1000;  // each 1-minutes.\r\nexport const ZING_THANK_TIME_STEP = 3 * 60 * 1000; // each 3-minutes.\r\nexport const ZING_SOURCE_TIME_STEP = 3 * 60 * 1000; // each 3-minutes.\r\nexport const ZING_DONATE_TIME_STEP = 10 * 60 * 1000; // each 10-minutes.\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\nimport {\r\n    MODE_MINI,\r\n    PLAYER_KEY,\r\n    BM_LOOPING_TYPE_ONE,\r\n    BM_LOOPING_TYPE_ALL,\r\n} from '../constants/player';\r\nimport Storer from '../utils/storer';\r\n\r\n\r\nexport const playerReducer = (state, action) => {\r\n    let result = state;\r\n\r\n    switch (action.type) {\r\n        case 'setState':\r\n            result = {\r\n                ...state,\r\n                ...action.fields,\r\n            }\r\n            break;\r\n        case 'setPlaybackStat':\r\n            result = {\r\n                ...state,\r\n                playbackStat: {\r\n                    ...state.playbackStat,\r\n                    ...action.payload,\r\n                }\r\n            }\r\n            break;\r\n        case 'setPlaybackError':\r\n            result = {\r\n                ...state,\r\n                playbackError: action.payload\r\n            }\r\n            break;\r\n        case 'playTrack':\r\n            result = {\r\n                ...state,\r\n                track: action.payload.track,\r\n                activeIndex: action.payload.index,\r\n            }\r\n            break;\r\n        case 'setTracks':\r\n            result = {\r\n                ...state,\r\n                tracks: action.payload,\r\n            }\r\n            break;\r\n        case 'setBMError':\r\n            result = {\r\n                ...state,\r\n                bmError: action.payload\r\n            }\r\n            break;\r\n        case 'setBMState':\r\n            result = {\r\n                ...state,\r\n                bmState: {\r\n                    ...state.bmState,\r\n                    ...action.payload,\r\n                },\r\n            };\r\n            break;\r\n        case 'setBMFields':\r\n\r\n            console.log(\"receved: \", action.fields);\r\n\r\n            result = {\r\n                ...state,\r\n                bmState: {\r\n                    ...state.bmState,\r\n                    ...action.fields,\r\n                },\r\n            }\r\n            break;\r\n        default:\r\n            result = {\r\n                ...state\r\n            };\r\n            break;\r\n    }\r\n\r\n    if (action.save) {\r\n        Storer.set(PLAYER_KEY, result);\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const initialPlayerState = {\r\n    mode: MODE_MINI,\r\n    story: null,      /* active story */\r\n    chapter: null,    /* active chapter */\r\n    chapters: null,   /* active chapter list */\r\n\r\n    /** audio state */\r\n    tracks: [],     /* active track list */\r\n    track: {},      /* active track */\r\n    activeIndex: -1,        /* current index in playlist */\r\n    playbackStat: {},     /* current audio-player state */\r\n\r\n    /** bm music state */\r\n    bmState: { /* mb state object */\r\n        isLoaded: false,\r\n        durationMillis: 0,\r\n        positionMillis: 0, // -- to keep good performance, positionMillis will not updated interval.\r\n        shouldPlay: false,\r\n        isPlaying: false,\r\n        isBuffering: false,\r\n        isLooping: false,\r\n        didJustFinish: false,\r\n        progressUpdateIntervalMillis: 100, // will be ignore in BG music.\r\n        muted: false,\r\n        volume: 1.0,\r\n        loopingType: BM_LOOPING_TYPE_ALL,\r\n    },\r\n    bmError: null,\r\n};\r\n\r\nexport const PlayerContext = createContext(initialPlayerState);\r\n\r\nexport const PlayerProvider = ({ reducer, initialState, children }) => (\r\n    <PlayerContext.Provider value={useReducer(reducer, initialState)}>{children}</PlayerContext.Provider>\r\n);\r\n\r\nexport const usePlayer = () => useContext(PlayerContext);\r\n\r\nexport const usePlayerDispatch = () => {\r\n    const [_, dispatch] = usePlayer();\r\n\r\n    return dispatch;\r\n}\r\n","import {\r\n    Audio,\r\n    InterruptionModeAndroid,\r\n    InterruptionModeIOS,\r\n} from \"expo-av\";\r\n\r\nimport { BM_LOOPING_TYPE_ALL, \r\n         BM_LOOPING_TYPE_ONE } from \"../../../constants/player\";\r\n\r\nconst initState = {\r\n    volume: 1.0,\r\n    muted: false,\r\n    loopingType: BM_LOOPING_TYPE_ALL,\r\n};\r\n\r\nconst BmError = {\r\n    PLAYLIST_EMPTY: 'PLAY LIST EMPTY',\r\n    INVALID_INDEX: 'INVALID PLAY INDEX',\r\n    AUDIO_ERROR: 'AUDIO PLAYBACK ERROR',\r\n}\r\n\r\nclass BmPlayer {\r\n    constructor(initUrls = [], state,  onError, onStateChanged) {\r\n        this.playlist = [];\r\n        this.index = 0;\r\n        this.playback = null;\r\n        this.initState = state || initState;\r\n        this.state = this.initState;\r\n\r\n        // generate playlist from list of urls.\r\n        for (let i = 0; i < initUrls.length; i++) {\r\n            this.playlist.push({\r\n                url: initUrls[i]\r\n            })\r\n        }\r\n\r\n        this.onError = onError;\r\n        this.onStateChanged = onStateChanged;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        Audio.setAudioModeAsync({\r\n            allowsRecordingIOS: false,\r\n            staysActiveInBackground: true,\r\n            interruptionModeIOS: InterruptionModeIOS.DoNotMix,\r\n            playsInSilentModeIOS: true,\r\n            shouldDuckAndroid: true,\r\n            interruptionModeAndroid: InterruptionModeAndroid.DoNotMix,\r\n            playThroughEarpieceAndroid: false\r\n        });\r\n    }\r\n\r\n    // cleanup\r\n    async destroy() {\r\n        await this.stop();\r\n        this.state = this.initState;\r\n        this.playlist = [];\r\n        this.onError = null;\r\n        this.onStateChanged = null;\r\n    }\r\n\r\n    async stop() {\r\n        /** ensure clean up memory  */\r\n        if (this.playback != null) {\r\n            await this.playback.unloadAsync();\r\n            this.playback = null;\r\n        }\r\n    }\r\n\r\n    async instancePlayback(uri, playing) {\r\n        await this.stop();\r\n\r\n        const source = { uri: uri };\r\n        const initialStatus = {\r\n            ...this.state,\r\n            shouldPlay: playing,\r\n            isLooping: this.state.loopingType === BM_LOOPING_TYPE_ONE\r\n        };\r\n         \r\n        const { sound, status } = await Audio.Sound.createAsync(\r\n            source,\r\n            initialStatus,\r\n            this.onPlaybackStatusUpdate,\r\n        );\r\n\r\n        this.playback = sound;\r\n        return this.playback;\r\n    }\r\n\r\n    onPlaybackStatusUpdate = status => {\r\n        if (status.isLoaded) {\r\n            const isProgressUpdated = Object\r\n                .keys(status)\r\n                .filter(k => k !== 'positionMillis')\r\n                .every(k => status[k] === this.state[k]);\r\n\r\n            this.state = { ...status };\r\n            if (this.onStateChanged) this.onStateChanged(this.state, isProgressUpdated);\r\n            \r\n            if (status.didJustFinish && !status.isLooping) {\r\n                this.skip();\r\n            }\r\n        } else {\r\n            if (status.error) {\r\n                return this.error({ code: BmError.AUDIO_ERROR, msg: `FATAL PLAYER ERROR: ${status.error}`})\r\n            }\r\n        }\r\n    };\r\n\r\n    // add list urls to end of playlist.\r\n    addUrls(urlsToAdd) {\r\n        for (let i = 0; i < urlsToAdd.length; i++) {\r\n            this.playlist.push({\r\n                url: urlsToAdd[i]\r\n            });\r\n        }\r\n    }\r\n\r\n    error(msg) {\r\n        if (this.onError) this.onError(error);\r\n        console.log(error);\r\n    }\r\n\r\n    async play(index) {\r\n        /** ensure playlist setup first! */\r\n        if (this.playlist.length === 0) {\r\n            return this.error(\r\n                { code: BmError.PLAYLIST_EMPTY, msg: `FATAL MB-PLAYER PLAYLIST NOT SETUP YET`}\r\n            ) \r\n        }\r\n\r\n        /** only create instance if current playback not setup or index changed. */\r\n        if (typeof index === 'number' && index != this.index) {\r\n            if (index < 0 || index > this.playlist.length - 1) {\r\n                return this.error({code: BmError.INVALID_INDEX, msg: 'FATAL MB-PLAYER TRY PLAY INVALID INDEX'});\r\n            }\r\n            this.index = index;\r\n            const data = this.playlist[this.index];\r\n            return await this.instancePlayback(data.url, true);\r\n        }\r\n\r\n        // fallback to case force-play first\r\n        if (typeof index !== 'number' && !this.playback) {\r\n            this.index = 0;\r\n            return await this.instancePlayback(this.playlist[0].url, true);\r\n        }\r\n        if (this.playback) {\r\n            await this.playback.playAsync();\r\n        }\r\n    }\r\n\r\n    // pause current track\r\n    async pause() {\r\n        if (this.playback) await this.playback.pauseAsync();\r\n    }\r\n\r\n    // skip to next/previous track\r\n    async skip(direction) {\r\n        let idx = 0;\r\n        if (direction === 'prev') {\r\n            idx = this.index - 1;\r\n            if (idx < 0) {\r\n                idx = this.playlist.length - 1;\r\n            }\r\n        } else {\r\n            idx = this.index + 1;\r\n            if (idx >= this.playlist.length) {\r\n                idx = 0;\r\n            }\r\n        }\r\n\r\n        await this.skipTo(idx);\r\n    }\r\n\r\n    // skip to specific track index in playlist\r\n    async skipTo(idx) {\r\n        // play new track.\r\n        await this.play(idx)\r\n    }\r\n\r\n    // Set the volume and update the volume slider display.\r\n    async volume(val) {\r\n        if (this.playback) {\r\n            await this.playback.setVolumeAsync(val);\r\n        }\r\n    }\r\n\r\n    async mute(muted) {\r\n        if (this.playback) {\r\n            await this.playback.setIsMutedAsync(muted)\r\n        }\r\n    }\r\n\r\n    // get state playing ?\r\n    async playing() {\r\n        if (this.playback) {\r\n            const status = await this.playback.getStatusAsync();\r\n            return status.isPlaying;\r\n        }\r\n    }\r\n\r\n    // Seek to a new position in the currently playing track.\r\n    // (per Percentage through the song to skip.)\r\n    async seek(per) {\r\n        if (this.playback) {\r\n            const to = this.state.duration * per;\r\n            await this.playback.playFromPositionAsync(to);\r\n        }\r\n    }\r\n\r\n    // jump x-ms\r\n    async jump(ms) {\r\n        if (this.playback) {\r\n            await this.playback.playFromPositionAsync(ms);\r\n        }\r\n    }\r\n}\r\n\r\nexport default BmPlayer;","import { useState, useEffect, useRef } from \"react\";\r\nimport { usePlayer } from \"../contexs/player\";\r\nimport { BM_URIs } from \"../constants/player\";\r\nimport BmPlayer from \"../comps/players/playbacks/bm\";\r\n\r\nexport const useBGMusic = () => {\r\n    const bmPlayer = useRef(null)\r\n    const [state, dispatch] = usePlayer();\r\n    const { bmState, bmError } = state;\r\n\r\n    function onStateChanged(status, isProgressUpdated) {\r\n        /** only dispatch if change other state than position. */\r\n        if (!isProgressUpdated) {\r\n            dispatch({\r\n                type: 'setBMState',\r\n                payload: status\r\n            })\r\n        }\r\n    }\r\n\r\n    function onError(err) {\r\n        dispatch({\r\n            type: 'setBMError',\r\n            payload: err\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        bmPlayer.current = new BmPlayer(BM_URIs, bmState, onError, onStateChanged);\r\n        return () => {\r\n            bmPlayer.current.destroy()\r\n            bmPlayer.current = null\r\n        }\r\n    }, [])\r\n\r\n    const play = async () => {\r\n        await bmPlayer.current.play()\r\n    }\r\n\r\n    const pause = async () => {\r\n        await bmPlayer.current.pause()\r\n    }\r\n\r\n    const skipNext = async () => {\r\n        await bmPlayer.current.skip();\r\n    }\r\n\r\n    const setVolume = async (val) => {\r\n        const v = val < 0 ? 0: (val > 1 ? 1 : val);\r\n        await bmPlayer.current.volume(v);\r\n    }\r\n\r\n    const setMute = async(muted) => {\r\n        await bmPlayer.current.mute(muted);\r\n    }\r\n\r\n    return { bmPlayer, bmState, bmError, play, pause, skipNext, setVolume, setMute}\r\n}","import Slider from \"@react-native-community/slider\";\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\nimport { MuteButton } from \"../../buttons\";\r\nimport { useBGMusic } from \"../../../hooks/use-bm\";\r\nimport { usePlayer } from \"../../../contexs/player\";\r\n\r\nexport function BMVolumeSetting() {\r\n\r\n    const [ {bmState}, dispatch] = usePlayer();\r\n    const {  setVolume, setMute } = useBGMusic();\r\n\r\n    const isBMActive = bmState.isLoaded;\r\n    const handleMute = ()=> {\r\n        if (!isBMActive) {\r\n            dispatch({\r\n                type: 'setBMFields',\r\n                fields: {\r\n                    muted: !bmState.muted\r\n                },\r\n                save: true,\r\n            })\r\n        }\r\n        else {\r\n            setMute(!bmState.muted);\r\n        }\r\n    }\r\n\r\n    const handleSetVolume = (v)=> {\r\n        console.log(\"change to v; \", v);\r\n        if (!isBMActive) {\r\n            console.log(\"dispatch\");\r\n            dispatch({\r\n                type: 'setBMFields',\r\n                fields: {\r\n                    volume: v\r\n                },\r\n                save: true,\r\n            })\r\n        }\r\n        else {\r\n            setVolume(v);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <MuteButton\r\n                muted={bmState.muted}\r\n                volume={bmState.volume}\r\n                onPress={handleMute} />\r\n            <Slider\r\n                style={styles.slider}\r\n                value={bmState.volume}\r\n                onValueChange={handleSetVolume}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    slider: {\r\n        alignSelf: \"stretch\"\r\n    },\r\n});\r\n\r\n","import { useGlobals } from \"../contexs/global\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst LANG_VI = 'vi';\r\nconst LANG_EN = 'en';\r\n\r\nexport const useIsVi = () => {\r\n  const [_, dispatch] = useGlobals();\r\n  const { t, i18n } = useTranslation();\r\n  \r\n  const switchLanguage = () => {\r\n    const target = i18n.language == LANG_VI ? LANG_EN: LANG_VI;\r\n    i18n.changeLanguage(target);\r\n    \r\n    dispatch({\r\n      type: 'setSession',\r\n      fields: {\r\n        language: target,\r\n      },\r\n      save: true,\r\n    });\r\n  };\r\n\r\n  return [i18n.language == LANG_VI, switchLanguage];\r\n};\r\n","// settings.js\r\n\r\nimport * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { View, Text, ScrollView, StyleSheet } from 'react-native';\r\nimport {\r\n  Button,\r\n  Switch,\r\n  Avatar,\r\n  Title,\r\n  Caption,\r\n  Paragraph,\r\n  Divider,\r\n  Subheading,\r\n  List,\r\n  MD3Colors,\r\n  TouchableRipple,\r\n} from 'react-native-paper';\r\n\r\nimport ClearCache from '../comps/utils/cache';\r\nimport LogoutButton from '../comps/utils/logout';\r\nimport AutoSignButton from '../comps/utils/setToken';\r\n\r\nimport { BMVolumeSetting } from '../comps/players/comps/bm-volume';\r\nimport { useIsDark } from '../hooks/use-theme';\r\nimport { useIsFemale } from '../hooks/use-prefer';\r\nimport { useIsVi } from '../hooks/use-language';\r\n\r\nfunction SettingScreen() {\r\n  const { t } = useTranslation();\r\n  const [isFemale, switchPrefer] = useIsFemale();\r\n  const [isDark, switchTheme] = useIsDark();\r\n  const [isVi, switchLanguage] = useIsVi();\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n\r\n      <View style={styles.row}>\r\n            <Subheading>{t('English <-> Vietnamese')}</Subheading>\r\n            <Switch value={isVi}  onValueChange={switchLanguage} />\r\n      </View>\r\n\r\n\r\n      <View style={styles.row}>\r\n            <Subheading>{t('Dark Mode')}</Subheading>\r\n            <Switch value={isDark}  onValueChange={switchTheme} />\r\n      </View>\r\n      <View style={styles.row}>\r\n            <Subheading>{t('Switch -> MALE')}</Subheading>\r\n            <Switch value={isFemale }  onValueChange={switchPrefer} />\r\n      </View>\r\n      <BMVolumeSetting />\r\n      <AutoSignButton />\r\n      <LogoutButton />\r\n\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    elevation: 2,\r\n    padding: 16,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingTop: 16,\r\n    paddingHorizontal: 16,\r\n    width: '100%'\r\n  },\r\n \r\n});\r\n\r\nexport default SettingScreen;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_TELEMETRY = gql`\r\n    query getTelemetry {\r\n        telemetry {\r\n        data {\r\n            id\r\n            attributes {\r\n            requests\r\n            }\r\n        }\r\n        }\r\n    }\r\n`\r\n\r\nconst INCREMENT_TELEMETRY = gql`\r\n  # Increments a back-end counter and gets its resulting value\r\n  mutation increTelemetry {\r\n    increTeletry {\r\n      data {\r\n        id\r\n        attributes {\r\n          requests\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_TELEMETRY, INCREMENT_TELEMETRY }","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_TODOS = gql`\r\n    query getTodos($start: Int, $limit: Int) {\r\n        todos(pagination: {start: $start, limit:  $limit }) {\r\n            data {\r\n                id\r\n                attributes {\r\n                    title\r\n                    hours\r\n                }\r\n            }\r\n            meta {\r\n                pagination {\r\n                    total\r\n                    page\r\n                    pageSize\r\n                    pageCount\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst SET_HOURS_TODO = gql`\r\n    mutation setTodoHours($id: ID!, $hours: Int!) {\r\n        updateTodo(id: $id, data: {hours: $hours}) {\r\n        data {\r\n            id,\r\n            attributes {\r\n            hours\r\n            }\r\n        }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ADD_TODO = gql`\r\n    mutation addTodo($hours: Int!, $title: String!) {\r\n        createTodo(data: {hours: $hours, title: $title}) {\r\n        data {\r\n            id\r\n            attributes {\r\n            hours\r\n            title\r\n            }\r\n        }\r\n        }\r\n    }\r\n`;\r\n\r\nexport { GET_TODOS, ADD_TODO, SET_HOURS_TODO }","\r\nimport * as React from 'react';\r\nimport { View, FlatList, StyleSheet, RefreshControl } from 'react-native';\r\nimport { Error } from '../error';\r\nimport {\r\n  Text,\r\n  List,\r\n  Caption,\r\n  Button,\r\n  useTheme,\r\n  Divider,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\n\r\nimport { useQuery, NetworkStatus } from \"@apollo/client\";\r\nimport { GET_TODOS, } from '../../api/test/todos';\r\n\r\nimport flatten from '../../utils/flatten';\r\n\r\nimport { \r\n  ListLoadmoreIndicator, \r\n  ScreenLoadingIndicator \r\n} from '../indicators';\r\nimport { ListHeader, ItemSeparator, ListEmpty } from '../list';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst TodoItem = ({ id, title, hours }) => (\r\n  <List.Item\r\n    style={styles.item}\r\n    title={title}\r\n    description={`work hours ${hours}`}\r\n    left={(props) => <List.Icon {...props} icon=\"notifications\" />}\r\n    right={(props) => <Caption>{`id:${id}`}</Caption>}\r\n    onPress={() => {\r\n      alert('selected.');\r\n    }}\r\n  />\r\n);\r\n\r\n\r\nexport function TodoList() {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  const { loading,\r\n    error,\r\n    data,\r\n    fetchMore,\r\n    refetch, networkStatus } = useQuery(GET_TODOS, {\r\n      fetchPolicy: 'cache-first', // 'cache-and-network, no-cache, cache-and-network, cache-only, cache-first',\r\n\r\n      /** network-only, make dupplicate item in cache ? */\r\n      notifyOnNetworkStatusChange: true,\r\n      variables: {\r\n        start: 0,\r\n        limit: 10\r\n      },\r\n    });\r\n\r\n  if (error) return <Error\r\n    msg={error.message}\r\n    onRefresh={() => refetch()}\r\n  />\r\n\r\n  const execFetchMore = () => {\r\n    const { todos: { meta: { pagination } } } = data;\r\n    if (pagination.page < pagination.pageCount) {\r\n      fetchMore({\r\n        variables: {\r\n          start: data.todos.data.length\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  const renderFooter = (props) => {\r\n    let noMore = false\r\n    if (!loading && !error) {\r\n      const { todos: { meta: { pagination: {\r\n        page, pageCount\r\n      } } } } = data;\r\n      noMore = (page === pageCount)\r\n    }\r\n    return (\r\n      <View style={styles.footer}>\r\n        {networkStatus == NetworkStatus.fetchMore && <ListLoadmoreIndicator />}\r\n        {noMore && <Caption>No more items at the moment</Caption>}\r\n      </View>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {networkStatus === NetworkStatus.loading ? (\r\n        <ScreenLoadingIndicator />\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={styles.list}\r\n          data={flatten(data.todos)}\r\n          ListHeaderComponent={ListHeader}\r\n          ListFooterComponent={renderFooter}\r\n          ListEmptyComponent={() => <ListEmpty onRefresh={() => refetch()} />}\r\n          ItemSeparatorComponent={ItemSeparator}\r\n          renderItem={({ item }) => (\r\n            <TodoItem\r\n              title={item.title}\r\n              hours={item.hours}\r\n              id={item.id}\r\n            />\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n          onEndReachedThreshold={0.2}\r\n          onEndReached={execFetchMore}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={networkStatus === NetworkStatus.refetch}\r\n              onRefresh={() => refetch()}\r\n              title={t('loading todos')}\r\n              titleColor={theme.colors.text}\r\n              colors={theme.colors.primary}\r\n              tintColor={theme.colors.primary}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  empty: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    paddingBottom: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  list: {\r\n    flexGrow: 1,\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    padding: 20,\r\n    fontSize: 15,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\n/**\r\n * NetworkStatus\r\n \r\n  loading = 1,\r\n  setVariables = 2,\r\n  fetchMore = 3,\r\n  refetch = 4,\r\n  poll = 6,\r\n  ready = 7,\r\n  error = 8,\r\n */","import React, { useEffect, useLayoutEffect } from \"react\";\r\nimport { StyleSheet, View, Modal } from \"react-native\";\r\nimport { TouchableRipple, Title, Surface } from \"react-native-paper\";\r\nimport FlipCard, { FlipSide } from \"../animations/flip\";\r\nimport { useIsFemale } from \"../../hooks/use-prefer\";\r\nimport Animated, {FadeOutDown, FadeInUp, Layout, Easing} from \"react-native-reanimated\";\r\nimport { femaleImgUri, maleImgUri } from \"./icon\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Card } from \"react-native-paper\";\r\n\r\nexport const CardView = ({ title, iconUri, style={}, titleStyle={}, iconStyle={}}) => (\r\n    <View style={[styles.card, style]}>\r\n        <Card.Cover style={[styles.icon, iconStyle]} source={iconUri} />\r\n        <Title style={[styles.title, titleStyle]}>{title}</Title>\r\n    </View>\r\n)\r\n\r\nexport const SweetCard = (props)=> {\r\n    const { t } = useTranslation();\r\n    return <CardView {...props} iconUri={femaleImgUri} title={t('Sweet with love')} />\r\n};\r\n\r\nexport const FantasyCard = (props)=> {\r\n    const { t } = useTranslation();\r\n    return <CardView {...props} iconUri={maleImgUri} title={t('Fantasy, action')} />\r\n}\r\n\r\nexport function PreferAnim() {\r\n    const [isFemale] = useIsFemale();\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <FlipCard\r\n            side={isFemale ? FlipSide.FRONT : FlipSide.BACK}\r\n            modal={true}\r\n            style={styles.flip}\r\n            slideStyle={styles.slide}\r\n            frontStyle={styles.front}\r\n            backStyle={styles.back}\r\n            front={<SweetCard />}\r\n            back={<FantasyCard />}\r\n        />\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    flip: {\r\n        height: 300,\r\n        width: 300,\r\n    },\r\n    slide: {\r\n        width: 300,\r\n        height: 300,\r\n    },\r\n    front: {\r\n        backgroundColor: 'rgb(188, 69, 152)',\r\n    },\r\n    back: {\r\n        backgroundColor: 'rgb(187, 248, 198)',\r\n    },\r\n    card: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        rowGap: 20,\r\n        backgroundColor: 'transparent',\r\n    },\r\n    icon: {\r\n        width: 100,\r\n        height: 100,\r\n        backgroundColor: 'transparent',\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n    }\r\n});","// https://docs.expo.dev/guides/facebook-authentication/\r\nimport { useEffect, useState } from 'react';\r\nimport * as AuthSession from 'expo-auth-session';\r\nimport * as Facebook from 'expo-auth-session/providers/facebook';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nimport { Image, StyleSheet, View } from 'react-native';\r\nimport { Button, Text } from 'react-native-paper';\r\n\r\n/** Invoke this method to the app screen you want to redirect back to by adding the following code snippet\r\n * If this method is not invoked, the popup will not dismiss itself\r\n */\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nfunction FacebookAuth() {\r\n\tconst [ user, setUser ] = useState(null);\r\n\tconst [ request, response, promptAsync ] = Facebook.useAuthRequest({\r\n\t\tclientId: '1715434385496424' // TODO: move to const file.\r\n\t});\r\n\r\n\tif (request) {\r\n\t\tconsole.log(\r\n\t\t\t'You need to add this url to your authorized redirect urls on your Facebook app: ' + request.redirectUri\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (response && response.type === 'success' && response.authentication) {\r\n\t\t\t\t(async () => {\r\n\t\t\t\t\tconst userInfoResponse = await fetch(\r\n\t\t\t\t\t\t`https://graph.facebook.com/me?access_token=${response.authentication\r\n\t\t\t\t\t\t\t.accessToken}&fields=id,name,picture.type(large)`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst userInfo = await userInfoResponse.json();\r\n\t\t\t\t\tsetUser(userInfo);\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ response ]\r\n\t);\r\n\r\n\tconst handlePressAsync = async () => {\r\n\t\tconst result = await promptAsync();\r\n\t\tif (result.type !== 'success') {\r\n\t\t\talert('Uh oh, something went wrong');\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t{user ? (\r\n\t\t\t\t<Profile user={user} />\r\n\t\t\t) : (\r\n\t\t\t\t<Button disabled={!request} onPress={handlePressAsync}>\r\n\t\t\t\t\tSign in with Facebook\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nfunction Profile({ user }) {\r\n\treturn (\r\n\t\t<View style={styles.profile}>\r\n\t\t\t<Image source={{ uri: user.picture.data.url }} style={styles.image} />\r\n\t\t\t<Text style={styles.name}>{user.name}</Text>\r\n\t\t\t<Text>ID: {user.id}</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\tprofile: {\r\n\t\talignItems: 'center'\r\n\t},\r\n\tname: {\r\n\t\tfontSize: 20\r\n\t},\r\n\timage: {\r\n\t\twidth: 100,\r\n\t\theight: 100,\r\n\t\tborderRadius: 50\r\n\t}\r\n});\r\n\r\n\r\nexport default FacebookAuth;","\r\n\r\n// https://docs.expo.dev/guides/google-authentication/\r\nimport { useEffect, useState } from 'react';\r\nimport * as AuthSession from 'expo-auth-session';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as Google from \"expo-auth-session/providers/google\";\r\n\r\nimport { Image, StyleSheet, View } from 'react-native';\r\nimport { Button, Text } from 'react-native-paper';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport function GoogleAuth() {\r\n    const [token, setToken] = useState(\"\");\r\n\tconst [ user, setUser ] = useState(null);\r\n  \r\n    const [request, response, promptAsync] = Google.useAuthRequest({\r\n      // androidClientId: \"GOOGLE_GUID.apps.googleusercontent.com\",\r\n      // TODO: use config file\r\n      webClientId: \"247608820260-8liq8ksil2m6v84tgpq83sf9pdg3adlv.apps.googleusercontent.com\",\r\n      iosClientId: \"247608820260-vi2bp28butlgpjjiff9tfnghdtdvdbca.apps.googleusercontent.com\",\r\n  \r\n    });\r\n\r\n    if (request) {\r\n\t\tconsole.log(\r\n\t\t\t'You need to add this url to your authorized redirect urls on your Google app: ' + request.redirectUri\r\n\t\t);\r\n\t}\r\n\r\n    useEffect(() => {\r\n        if (response?.type === \"success\") {\r\n          setToken(response.authentication.accessToken);\r\n          getUserInfo();\r\n        }\r\n      }, [response, token]);\r\n\r\n      const getUserInfo = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            \"https://www.googleapis.com/userinfo/v2/me\",\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n    \r\n          const user = await response.json();\r\n          console.log('user info', user);\r\n          setUser(user);\r\n        } catch (error) {\r\n          // Add your own error handler here\r\n        }\r\n      };\r\n\r\n      const handlePressAsync = async () => {\r\n\t\tconst result = await promptAsync();\r\n\t\tif (result.type !== 'success') {\r\n\t\t\talert('Uh oh, something went wrong');\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n      return (\r\n\t\t<View style={styles.container}>\r\n\t\t\t{user ? (\r\n\t\t\t\t<Profile user={user} />\r\n\t\t\t) : (\r\n\t\t\t\t<Button disabled={!request} onPress={handlePressAsync}>\r\n\t\t\t\t\tSign in with Google\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</View>\r\n      );\r\n};\r\n\r\n\r\n\r\nfunction Profile({ user }) {\r\n\treturn (\r\n\t\t<View style={styles.profile}>\r\n\t\t\t<Image source={{ uri: user.picture }} style={styles.image} />\r\n\t\t\t<Text style={styles.name}>{user.name}</Text>\r\n\t\t\t<Text>ID: {user.id}</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"#fff\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    text: {\r\n      fontSize: 20,\r\n      fontWeight: \"bold\",\r\n    },\r\n\tprofile: {\r\n\t\talignItems: 'center'\r\n\t},\r\n\tname: {\r\n\t\tfontSize: 20\r\n\t},\r\n\timage: {\r\n\t\twidth: 100,\r\n\t\theight: 100,\r\n\t\tborderRadius: 50\r\n\t}\r\n  });\r\n\r\n  export default GoogleAuth;","import { useState, useEffect, useRef } from \"react\";\r\nimport { usePlayer } from \"../contexs/player\";\r\nimport {\r\n    Audio,\r\n    InterruptionModeAndroid,\r\n    InterruptionModeIOS,\r\n} from \"expo-av\";\r\nimport Hls from 'hls.js';\r\nimport { SYS_SOUD_URIs } from \"../constants/player\";\r\n\r\nconst AudioError = {\r\n    PLAYLIST_EMPTY: 'PLAY LIST EMPTY',\r\n    INVALID_INDEX: 'INVALID PLAY INDEX',\r\n    INIT_ERROR: 'INIT_ERROR',\r\n    AUDIO_ERROR: 'AUDIO PLAYBACK ERROR',\r\n    WAIT_INTERACT: 'WAIT_INTERACT',\r\n}\r\n\r\n/** create HTML5 Audio instance and return ref */\r\nfunction createAudioRef(onStatusUpdate) {\r\n    const audio = new window.Audio();            // create audio wo/ src\r\n    audio.preload = 'auto';                      // intend to play through\r\n    audio.autoplay = true;                       // autoplay when loaded\r\n    audio.oncanplay = () => {\r\n        onStatusUpdate({\r\n            isLoaded: true,\r\n        })\r\n    }\r\n    audio.onplay = () => {\r\n        onStatusUpdate({\r\n            isPlaying: true,\r\n        })\r\n    };\r\n    audio.onended = () => {\r\n        onStatusUpdate({\r\n            didJustFinish: true,\r\n        })\r\n    };\r\n    audio.onpause = () => {\r\n        onStatusUpdate({\r\n            isPlaying: false,\r\n        })\r\n    };\r\n    audio.ontimeupdate = () => {\r\n        onStatusUpdate({\r\n            positionMillis: audio.currentTime * 1000,\r\n        })\r\n    };\r\n    return audio;\r\n}\r\n\r\n/** update session metadata for screen-lock control | web */\r\nasync function updateMeta(track) {\r\n    if (\"mediaSession\" in navigator) {\r\n        navigator.mediaSession.metadata = new MediaMetadata({\r\n            title: track.title,\r\n            artist: track.artist,\r\n            album: track.album,\r\n            artwork: [{ src: track.artwork, },],\r\n            // 512x512 or 256x256\r\n        });\r\n    }\r\n}\r\n\r\n// navigator.mediaSession.setPositionState: is need ?\r\n\r\n\r\n/** register screen-lock action handlers | web */\r\nasync function setActionHandlers(actions, reset=false) {\r\n    if ( !(\"mediaSession\" in navigator) ) {\r\n        return;\r\n    }\r\n\r\n    const actionHandlers = [\r\n        ['play',          () => { actions.play() }],\r\n        ['pause',         () => { actions.pause() }],\r\n        ['stop',          () => { actions.stop() }],\r\n        ['seekbackward',  (details) => { actions.seek(details.seekOffset || -10) }],\r\n        ['seekforward',   (details) => { actions.seek(details.seekOffset || 30) }],\r\n        ['seekto',        (details) => { actions.seek(details.seekTime) }],\r\n      ];\r\n\r\n    for (const [action, handler] of actionHandlers) {\r\n        try {\r\n            navigator.mediaSession.setActionHandler(action, reset ? null : handler);\r\n        } catch (error) {\r\n            console.log(`The media session action \"${action}\" is not supported yet.`);\r\n        }\r\n    }\r\n}\r\n\r\nasync function createAvRef(autoPlay, track, stat, onStatusUpdate) {\r\n    const source = { uri: track.url };\r\n    const initialStatus = {\r\n        ...stat,\r\n        shouldPlay: autoPlay,\r\n        isLooping: false,\r\n    };\r\n\r\n    const { sound, status } = await Audio.Sound.createAsync(\r\n        source,\r\n        initialStatus,\r\n        onStatusUpdate,\r\n    );\r\n    return sound;\r\n}\r\n\r\n/** create HLS ref and attach to audioRef */\r\nasync function createHlsRef(autoPlay, track, audioRef, onStatusUpdate) {\r\n    console.log(\"init hls\");\r\n    if (!audioRef.current) {\r\n        return {\r\n            err: {\r\n                code: AudioError.INIT_ERROR,\r\n                msg: 'hls audio ref not initialized.',\r\n            }\r\n        }\r\n    }\r\n\r\n    // -- fallback use default system audio tag.\r\n    if (!Hls.isSupported()) {\r\n        audioRef.current.src = track.url;\r\n        audioRef.current.load();\r\n        return { hls: null, error: null };\r\n    }\r\n\r\n    const hls = new Hls();\r\n    hls.attachMedia(audioRef.current);\r\n    hls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\r\n        hls.loadSource(track.url);\r\n\r\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n            hls.on(Hls.Events.LEVEL_LOADED, (_, data) => {\r\n                const durationSeconds = data.details.totalduration;\r\n                onStatusUpdate({\r\n                    isLoaded: true,\r\n                    durationMillis: durationSeconds * 1000,\r\n                    positionMillis: 0,\r\n                    shouldPlay: autoPlay,\r\n                });\r\n\r\n                if (autoPlay) {\r\n                    audioRef.current?.play()\r\n                        .catch(() => {\r\n                            const msg = {\r\n                                code: AudioError.WAIT_INTERACT,\r\n                                msg: 'Unable to autoplay prior to user interaction with the dom.'\r\n                            }\r\n                            onStatusUpdate({\r\n                                error: msg,\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    hls.on(Hls.Events.ERROR, function (event, data) {\r\n        if (data.fatal) {\r\n            switch (data.type) {\r\n                case Hls.ErrorTypes.NETWORK_ERROR:\r\n                    hls.startLoad();\r\n                    break;\r\n                case Hls.ErrorTypes.MEDIA_ERROR:\r\n                    hls.recoverMediaError();\r\n                    break;\r\n                default:\r\n                    const msg = {\r\n                        code: AudioError.AUDIO_ERROR,\r\n                        msg: 'Unable to play hls audio, ' + data\r\n                    }\r\n                    onStatusUpdate({\r\n                        error: msg\r\n                    })\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n    return { hls }\r\n}\r\n\r\nexport const usePlayback = () => {\r\n    const audioRef = useRef(null)\r\n    const hlsRef = useRef(null)\r\n    const hlsFallback = useRef(false)\r\n    const avRef = useRef(null)\r\n    const [state, dispatch] = usePlayer();\r\n    const { tracks,\r\n        track,\r\n        activeIndex,\r\n        playbackStat,\r\n        playbackError } = state;\r\n\r\n    console.log(\"activeIndex: \", activeIndex,\r\n        \" tracks: \", tracks,\r\n        \"track: \", track);\r\n\r\n    function onPlaybackStatusUpdate(status) {\r\n        if (status.error) {\r\n            return error({ code: AudioError.AUDIO_ERROR, msg: `FATAL PLAYER ERROR: ${status.error}` })\r\n        }\r\n\r\n        if (status.didJustFinish) {\r\n            skipNext();\r\n        }\r\n        dispatch({\r\n            type: 'setPlaybackStat',\r\n            payload: status\r\n        })\r\n    }\r\n\r\n    function onError(err) {\r\n        dispatch({\r\n            type: 'setPlaybackError',\r\n            payload: err\r\n        })\r\n    }\r\n\r\n    function error(msg) {\r\n        console.log(msg);\r\n        onError(msg);\r\n    }\r\n\r\n    async function stop() {\r\n        if (hlsRef.current) {\r\n            hlsRef.current.destroy();\r\n        }\r\n        if (avRef.current) {\r\n            await avRef.current.unloadAsync();\r\n        }\r\n        if (hlsFallback.current && audioRef.current) {\r\n            audioRef.current.pause();\r\n        }\r\n\r\n        /** clear action handlers */\r\n        await setActionHandlers(null, true);\r\n    }\r\n\r\n    async function initPlayback() {\r\n        console.log('initPlayback')\r\n        await stop();\r\n        if (!track.isLoaded) { return; }\r\n\r\n        if (track.hls) {\r\n            const { err, hls } = await createHlsRef(\r\n                true,\r\n                track,\r\n                audioRef,\r\n                onPlaybackStatusUpdate\r\n            );\r\n            if (err) {\r\n                return error(err);\r\n            }\r\n            if (hls) {\r\n                hlsRef.current = hls;\r\n            }\r\n            else {\r\n                hlsFallback.current = true;\r\n            }\r\n        }\r\n        else {\r\n            avRef.current = await createAvRef(\r\n                true,\r\n                track,\r\n                playbackStat,\r\n                onPlaybackStatusUpdate\r\n            );\r\n        }\r\n\r\n        /** update session meta screen-lock controls */\r\n        await updateMeta(track);\r\n        \r\n        /** register action handlers screen-lock controls */\r\n        await setActionHandlers({\r\n            play, pause, stop, seek\r\n        }, true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!audioRef.current) {\r\n            audioRef.current = createAudioRef(onPlaybackStatusUpdate)\r\n        }\r\n\r\n        return () => {\r\n            if (audioRef.current) {\r\n                audioRef.current.pause();\r\n                audioRef.current = null;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (track.isLoaded) {\r\n            initPlayback();\r\n        }\r\n\r\n        return () => {\r\n            stop();\r\n        }\r\n    }, [track])\r\n\r\n    async function play(index) {\r\n        /** ensure playlist setup first! */\r\n        if (!tracks || tracks.length === 0) {\r\n            return error(\r\n                {\r\n                    code: AudioError.PLAYLIST_EMPTY,\r\n                    msg: `FATAL MB-PLAYER PLAYLIST NOT SETUP YET`\r\n                }\r\n            )\r\n        }\r\n\r\n        /** only create instance if current playback not setup or index changed. */\r\n        if (typeof index === 'number' && index != activeIndex) {\r\n            if (index < 0 || index > tracks.length - 1) {\r\n                return error({\r\n                    code: AudioError.INVALID_INDEX,\r\n                    msg: 'FATAL MB-PLAYER TRY PLAY INVALID INDEX'\r\n                });\r\n            }\r\n\r\n            const data = tracks[index];\r\n            return dispatch({\r\n                type: 'playTrack',\r\n                payload: {\r\n                    index: index,\r\n                    track: data\r\n                }\r\n            });\r\n        }\r\n\r\n        // fallback to case: play first track\r\n        if (typeof index !== 'number' && !track.isLoaded) {\r\n            const data = tracks[0];\r\n            return dispatch({\r\n                type: 'playTrack',\r\n                payload: {\r\n                    index: 0,\r\n                    track: data\r\n                }\r\n            });\r\n        }\r\n\r\n        // track ready => wait start.\r\n        if (track.isLoaded) {\r\n            await resume();\r\n        }\r\n    }\r\n\r\n    async function resume() {\r\n        if (!track.isLoaded) return;\r\n        if (track.hls) {\r\n            audioRef.current?.play();\r\n        }\r\n        else {\r\n            await avRef.current.playAsync();\r\n        }\r\n    }\r\n\r\n    async function pause() {\r\n        if (!track.isLoaded) return;\r\n        if (track.hls) {\r\n            audioRef.current?.pause();\r\n        }\r\n        else {\r\n            await avRef.current.pauseAsync();\r\n        }\r\n    }\r\n\r\n    // skip to next/previous track\r\n    async function skipNext(direction) {\r\n        let idx = 0;\r\n        if (direction === 'prev') {\r\n            idx = activeIndex - 1;\r\n            if (idx < 0) {\r\n                idx = tracks.length - 1;\r\n            }\r\n        } else {\r\n            idx = activeIndex + 1;\r\n            if (idx >= tracks.length) {\r\n                idx = 0;\r\n            }\r\n        }\r\n\r\n        await play(idx);\r\n    }\r\n\r\n    async function setVolume(val) {\r\n        if (!track.isLoaded) return;\r\n\r\n        const v = val < 0 ? 0 : (val > 1 ? 1 : val);\r\n\r\n        if (!track.hls) {\r\n            return await avRef.current.setVolumeAsync(v);\r\n        }\r\n\r\n        audioRef.current.volume = v;\r\n\r\n        onPlaybackStatusUpdate({\r\n            volume: v\r\n        });\r\n    }\r\n\r\n    async function setMute(muted) {\r\n        if (!track.isLoaded) return;\r\n\r\n        if (!track.hls) {\r\n            return await avRef.current.mute(muted);\r\n        }\r\n\r\n        audioRef.current.muted = muted;\r\n\r\n        onPlaybackStatusUpdate({\r\n            muted: muted\r\n        });\r\n    }\r\n\r\n    async function seek(ms) {\r\n        \r\n    }\r\n\r\n    /*\r\n    // Seek to a new position in the currently playing track.\r\n    // (per Percentage through the song to skip.)\r\n    async function seek(per) {\r\n        const to = playbackStat.durationMillis * per;\r\n        await jump(to);\r\n    }\r\n\r\n    // jump x-ms\r\n    async function jump(ms) {\r\n        if (!track.hls) {\r\n            await avRef.current.playFromPositionAsync(ms);\r\n        }\r\n        else {\r\n            audioRef.current?.currentTime = ms / 1000;\r\n            onPlaybackStatusUpdate({\r\n                positionMillis: ms\r\n            });\r\n        }\r\n    }\r\n    */\r\n\r\n    return {\r\n        play,\r\n        pause,\r\n        resume,\r\n        skipNext,\r\n        // jump,\r\n        // seek,\r\n        setVolume,\r\n        setMute,\r\n        stat: playbackStat,\r\n        err: playbackError,\r\n    }\r\n}","\r\nimport * as React from 'react';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nimport { View,  StyleSheet } from 'react-native';\r\nimport {\r\n    Text,\r\n    Button,\r\n} from 'react-native-paper';\r\n\r\nimport { usePlayback } from '../../hooks/use-playback';\r\nimport { usePlayer } from '../../contexs/player';\r\n\r\nimport { SYS_SOUD_URIs, HLS_URIs } from '../../constants/player';\r\nconst sampleArwork = \"https://picsum.photos/200\";\r\n\r\nconst hlsTracks = HLS_URIs.map((url, i) => ({\r\n    title: `track no: ${i}`,\r\n    artist: `M-Audio`,\r\n    album: `HLS DEMO`,\r\n    artwork: [ {  src: sampleArwork, },],\r\n    url: url,\r\n    hls: true,\r\n    isLoaded: true,\r\n}));\r\n\r\nconst mp3Tracks = SYS_SOUD_URIs.map((url, i) => ({\r\n    title: `track no: ${i}`,\r\n    artist: `M-Audio`,\r\n    album: `Mp3 DEMO`,\r\n    artwork: [ {  src: sampleArwork, },],\r\n    url: url,\r\n    hls: false,\r\n    isLoaded: true,\r\n}));\r\n\r\nconst SoundUIPlayer = () => {\r\n    console.log(\"build version X\");\r\n    const {play, pause, skipNext, setVolume, setMute, stat, err } = usePlayback();\r\n    const [_, dispatch] = usePlayer();\r\n\r\n    const setTracks = (hls)=> {\r\n        dispatch({\r\n            type: 'setTracks',\r\n            payload: hls ? hlsTracks: mp3Tracks,\r\n        })\r\n    };\r\n    return (\r\n        <View>\r\n            <Button onPress={() => setTracks(true)}>set HLS Tracks</Button>\r\n            <Button onPress={() => setTracks()}>set Mp3Tracks</Button>\r\n            <Button onPress={() => play()}>Play</Button>\r\n            <Button onPress={() => pause()} >Pause</Button>\r\n            <Button onPress={() => skipNext()}>Next</Button>\r\n            <Button onPress={() => skipNext()}>Next</Button>\r\n            <Button onPress={() => setVolume(0.5)}>Volume-</Button>\r\n            <Button onPress={() => setVolume(1.0)}>Volume+</Button>\r\n            <Button onPress={() => setMute(true)}>Mute</Button>\r\n            <Button onPress={() => setMute(false)}>UnMute</Button>\r\n            {err &&  <Text>{JSON.stringify(err)}</Text>}\r\n            {stat &&  <Text>{JSON.stringify(stat, null, 2)}</Text>}\r\n           \r\n        </View>\r\n    )\r\n}\r\n\r\nconst url = \"https://pysync.github.io/maudi-web/static/media/test-hls-1/index.m3u8\";\r\n\r\nconst AudioUIOnly = () => {\r\n\r\n    const videoRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!videoRef.current) {\r\n            videoRef.current = new window.Audio();\r\n        }\r\n\r\n        if (videoRef.current) {\r\n\r\n            videoRef.current.oncanplay = ()=> {\r\n                alert(\"now can play.\");\r\n                videoRef.current.play();\r\n            }\r\n        }\r\n    }, [videoRef.current]);\r\n\r\n    return (\r\n        <View>\r\n            <Button onPress={()=> {\r\n                if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\r\n                    videoRef.current.src = url;\r\n                    videoRef.current.load();\r\n                }\r\n                else {\r\n                    alert(\"Cannot Play type MpegUrl.\");\r\n                }\r\n\r\n            }}>\r\n                Load\r\n            </Button>\r\n            <Button onPress={()=> {\r\n                videoRef.current.play();\r\n            }}>\r\n                Play\r\n            </Button>\r\n        </View>\r\n    );\r\n}\r\nexport default SoundUIPlayer;\r\n\r\n","// test.js\r\n// https://blog.logrocket.com/react-native-track-player-complete-guide/\r\n// https://stackoverflow.com/questions/73408310/error-when-using-react-native-track-player-with-expo-dev\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { ScrollView, View, FlatList, StyleSheet } from 'react-native';\r\nimport { Text, Button, Divider } from 'react-native-paper';\r\n\r\nimport ListCategories from '../comps/categories/ListCategories';\r\nimport Telemetry from '../comps/telemetry';\r\nimport DisplayTodoList from '../comps/test/Todos';\r\nimport { TodoList } from '../comps/test/Todos';\r\n\r\nimport { PreferSwitch } from '../comps/prefer/switch';\r\nimport { PreferAnim } from '../comps/prefer/anim';\r\n\r\nimport { GradientCover } from '../comps/covers';\r\nimport { Title } from 'react-native-paper';\r\n\r\nimport FacebookAuth from '../comps/socialauth/facebook';\r\nimport GoogleAuth from '../comps/socialauth/google';\r\nimport { Audio, } from 'expo-av';\r\n\r\n// import Player from '../comps/player/player';\r\n\r\nimport PlatformUtils from '../utils/platform';\r\n\r\nimport ReactHlsPlayer from 'react-hls-player';\r\n\r\nimport BmUIPlayer from '../comps/players/bm-ui';\r\nimport SoundUIPlayer from '../comps/players/sound-ui';\r\n\r\nexport function ExpoAvApp() {\r\n  const [sound, setSound] = React.useState();\r\n  const uri = \"https://playertest.longtailvideo.com/adaptive/alt-audio-no-video/sintel/playlist.m3u8\"\r\n  \r\n  async function playSound() {\r\n    console.log('Loading Sound');\r\n    const { sound } = await Audio.Sound.createAsync({\r\n      uri: uri\r\n    });\r\n    setSound(sound);\r\n\r\n    console.log('Playing Sound');\r\n   \r\n    /*await Audio.setAudioModeAsync({\r\n      allowsRecordingIOS: false,\r\n      staysActiveInBackground: true, // not work for ios in expo-go, only work in standalone app.\r\n      playsInSilentModeIOS: true,\r\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n\r\n      shouldDuckAndroid: true,\r\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n      playThroughEarpieceAndroid: false\r\n    })*/\r\n\r\n    await sound.playAsync();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    return sound\r\n      ? () => {\r\n          console.log('Unloading Sound');\r\n          sound.unloadAsync();\r\n        }\r\n      : undefined;\r\n  }, [sound]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      {/** use hls player for mobile */}\r\n      {PlatformUtils.isWeb && <ReactHlsPlayer\r\n        src={uri}\r\n        autoPlay={true}\r\n        controls={true}\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n      />}\r\n      {/** use av for mobile */}\r\n      {!PlatformUtils.isWeb && \r\n      <Button  onPress={playSound}>Play Sound </Button>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst voiceIds = {\r\n  DEFAULT: 'DEFAULT',\r\n  FEMALE: 'FEMALE',\r\n  MALE: 'MALE',\r\n  FEMALE_VIP: 'FEMALE_VIP',\r\n  MALE_VIP: 'MALE_VIP',\r\n}\r\n\r\nfunction TestScreenHLS() {\r\n  const [data, setData] = useState(null);\r\n\r\n  const init = async () => {\r\n    // Set up the player\r\n    console.log('Set up the player')\r\n    await TrackPlayer.setupPlayer();\r\n    console.log('Set up the player -> Done')\r\n  \r\n\r\n\r\n  };\r\n\r\n  const start = async () => {\r\n        // Add a track to the queue\r\n      await TrackPlayer.add({\r\n          id: 'trackId',\r\n          url: 'http://localhost:1337/uploads/1-1/index.m3u8',\r\n          title: 'Track Title',\r\n          artist: 'Track Artist',\r\n          artwork: '',\r\n        });\r\n\r\n    // Start playing it\r\n    await TrackPlayer.play();\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Button onPress={()=> {\r\n      init();\r\n     }}>\r\n\r\n        Init \r\n\r\n      </Button>\r\n      <Button onPress={()=> {\r\n      start();\r\n     }}>\r\n\r\n        Start \r\n      </Button>\r\n\r\n      <Button onPress={() => {\r\n        fetch(`http://localhost:1337/api/synther/1/1?voiceId=${voiceIds.DEFAULT}`)\r\n          .then(ret => ret.json())\r\n          .then(data => {\r\n            console.log('got url: ', data);\r\n            const records = data.records;\r\n            const url = 'http://localhost:1337/uploads/' + records[0].filename;\r\n            console.log(\"URL => \", url);\r\n\r\n            setData({url})\r\n          });\r\n\r\n      }}>Female</Button>\r\n\r\n      <Button onPress={() => {\r\n        fetch(`http://localhost:1337/api/synther/1/1?voiceId=${voiceIds.MALE_VIP}`)\r\n          .then(ret => ret.json())\r\n          .then(data => {\r\n            console.log('got url: ', data);\r\n            setData(data)\r\n          });\r\n\r\n      }}>Male Vip</Button>\r\n\r\n      {data && data.url && <ReactHlsPlayer\r\n        src={data.url}\r\n        autoPlay={true}\r\n        controls={true}\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n      />}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst TestPage = ()=> (\r\n  <ScrollView>\r\n    {/* <BmUIPlayer /> */}\r\n    <SoundUIPlayer />\r\n  </ScrollView>\r\n)\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\nexport default TestPage;\r\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useIsFocused } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useIsDark } from '../hooks/use-theme';\r\nimport { Image, View, StyleSheet } from 'react-native';\r\nimport {\r\n  useTheme,\r\n  Portal,\r\n  FAB,\r\n  IconButton,\r\n  MD3Colors,\r\n} from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { BadgeIcon } from '../comps/buttons';\r\nimport ChanelScreen from '../screens/channel';\r\nimport ChartScreen from '../screens/chart';\r\nimport ConfirmModal from '../screens/confirm';\r\nimport CreatePostScreen from '../screens/create';\r\nimport DetailsScreen from '../screens/details';\r\nimport ExplorerScreen from '../screens/explorer';\r\nimport HomeScreen from '../screens/home';\r\nimport InboxScreen from '../screens/inbox';\r\nimport LibraryScreen from '../screens/library';\r\nimport MeScreen from '../screens/me';\r\nimport NotFoundScreen from '../screens/notfound';\r\nimport ReadingScreen from '../screens/reading';\r\nimport SearchScreen from '../screens/search';\r\nimport SettingScreen from '../screens/settings';\r\nimport TestScreen from '../screens/test';\r\nimport { PreferAnim } from '../comps/prefer/anim';\r\nimport ScreenIds from '../constants/screens';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst initialRouteName = ScreenIds.Home;\r\n\r\nfunction LogoTitle() {\r\n  return (\r\n    <Image\r\n      style={{ width: 50, height: 50 }}\r\n      source={require('../assets/icon.png')}\r\n    />\r\n  );\r\n}\r\n\r\nfunction LibraryStack({ navigation }) {\r\n  const { t } = useTranslation();\r\n\r\n  console.log(\"Library Stack Rendering..\");\r\n  \r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name={ScreenIds.Me}\r\n        component={MeScreen}\r\n        options={{\r\n          title: t('Me'),\r\n          headerRight: ({ size, color }) => (\r\n            <View style={styles.barItem}>\r\n              <BadgeIcon\r\n                icon=\"mail-outline\"\r\n                badges={3}\r\n                onPress={() => navigation.push(ScreenIds.Inboxes)}\r\n                iconColor={color}\r\n                size={size}\r\n              />\r\n              <IconButton\r\n                onPress={() => navigation.push(ScreenIds.Settings)}\r\n                icon=\"md-settings-outline\"\r\n                iconColor={color}\r\n                size={size}\r\n              />\r\n            </View>\r\n          ),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ScreenIds.Settings}\r\n        component={SettingScreen}\r\n        options={{\r\n          title: t('Settings'),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ScreenIds.Inboxes}\r\n        component={InboxScreen}\r\n        options={{\r\n          title: t('Inboxes'),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/** story main stack: home -> details -> reading.  */\r\nfunction HomeStack({ navigation }) {\r\n  const { t } = useTranslation();\r\n  const isFocused = useIsFocused();\r\n\r\n  return (\r\n    <>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name={ScreenIds.Home}\r\n          component={HomeScreen}\r\n          options={{\r\n            title: t('Home'),\r\n            headerRight: ({ size, color }) => (\r\n              <View style={styles.barItem}>\r\n                <IconButton\r\n                  onPress={() => {}}\r\n                  icon=\"search\"\r\n                  iconColor={color}\r\n                  size={size}\r\n                />\r\n                <IconButton\r\n                  onPress={() => {}}\r\n                  icon=\"md-grid-outline\"\r\n                  iconColor={color}\r\n                  size={size}\r\n                />\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name={ScreenIds.Channel}\r\n          component={ChanelScreen}\r\n          options={{\r\n            title: t('Channel'),\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n\r\n      <Portal>\r\n        <FAB\r\n          visible={isFocused} // show FAB only when this screen is focused\r\n          icon=\"play-circle\"\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 100,\r\n            right: 16,\r\n          }}\r\n        />\r\n        {/* <PreferAnim /> */}\r\n      </Portal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AppTabs({ navigation }) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen\r\n        name=\"HomeStack\"\r\n        component={HomeStack}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarLabel: t('Home'),\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name={ScreenIds.Chart}\r\n        component={ChartScreen}\r\n        options={{\r\n          title: t('#DHChart'),\r\n          tabBarLabel: t('#DHChart'),\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"stats-chart\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name={ScreenIds.Explorer}\r\n        component={ExplorerScreen}\r\n        options={{\r\n          title: t('Explorer'),\r\n          tabBarLabel: t('Explorer'),\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"compass-outline\" size={size} color={color} />\r\n          ),\r\n          headerRight: ({ size, color }) => (\r\n            <IconButton\r\n              onPress={() => navigation.push(ScreenIds.Search)}\r\n              icon=\"search\"\r\n              iconColor={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"LibraryStack\"\r\n        component={LibraryStack}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarLabel: t('Library'),\r\n          tabBarBadge: null,\r\n          tabBarBadgeStyle: styles.barBadge,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"person-circle\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction AppStack() {\r\n  const { t } = useTranslation();\r\n  const [isDark] = useIsDark();\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName={initialRouteName}\r\n    >\r\n      <Stack.Screen\r\n        name=\"AppTabs\"\r\n        component={AppTabs}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen name={ScreenIds.Search} component={SearchScreen} />\r\n\r\n      <Stack.Screen\r\n          name={ScreenIds.Details}\r\n          component={DetailsScreen}\r\n          initialParams={ {storyCode: null} }\r\n          options={{\r\n            title: null,\r\n            headerTransparent: true,\r\n            headerTintColor: isDark ? 'white': 'black',\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name={ScreenIds.Reading}\r\n          component={ReadingScreen}\r\n          options={{\r\n            title: t('Reading'),\r\n          }}\r\n        />\r\n\r\n      <Stack.Screen name=\"Create\" component={CreatePostScreen} />\r\n\r\n      <Stack.Screen\r\n        name=\"ConfirmModal\"\r\n        component={ConfirmModal}\r\n        options={{\r\n          presentation:\r\n            'transparentModal' /** use presentation modal to create modal */,\r\n          headerShown: false,\r\n          cardOverlayEnabled: true,\r\n        }}\r\n      />\r\n      <Stack.Screen name={ScreenIds.NotFound} component={NotFoundScreen} />\r\n      <Stack.Screen name={ScreenIds.Test} component={TestScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  barItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  barBadge: {\r\n    minWidth: 12,\r\n    maxWidth: 12,\r\n    maxHeight: 12,\r\n    fontSize: 6,\r\n    lineHeight: 8,\r\n    alignSelf: undefined,\r\n  },\r\n});\r\n\r\nexport default AppStack;\r\n","import React, { useMemo } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Caption, Colors, useTheme } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\nexport const HzLogo = ({style}) => {\r\n    const theme = useTheme();\r\n  \r\n    return (\r\n      <View style={[styles.compact, style]}>\r\n          <Icon size={40} \r\n                color={theme.colors.secondary} \r\n                name={'ios-book-outline'}/>\r\n          <Caption>Reading Everywhere</Caption>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport const Logo = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <View style={styles.compact}>\r\n            <Icon size={20} \r\n                color={theme.colors.secondary} \r\n                name={'ios-book-outline'}/>\r\n            <Caption>Reading Everywhere</Caption>\r\n        </View>\r\n    ) ;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    compact: {\r\n        gap: 5,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n","// preference.js\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Button, Caption } from 'react-native-paper';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { HzLogo } from '../comps/logo';\r\nimport { SweetCard, FantasyCard } from '../comps/prefer/anim';\r\nimport { Surface, TouchableRipple } from 'react-native-paper';\r\n\r\nimport { MALE, FEMALE } from '../constants/session';\r\nimport { usePrefer } from '../hooks/use-prefer';\r\nimport { useTheme } from 'react-native-paper';\r\n\r\n\r\nfunction PreferItem({ type, checked, onPress }) {\r\n  const theme = useTheme();\r\n  const elevation = checked ? 4: 1;\r\n  const cardStyle = checked ? {\r\n    backgroundColor: theme.colors.surface,\r\n    borderRadius: 10,\r\n  }: {\r\n    backgroundColor: theme.colors.surface,\r\n    borderRadius: 10,\r\n  };\r\n \r\n  return (\r\n    <TouchableRipple style={styles.preferItem} onPress={() => onPress(type)} >\r\n      <Surface elevation={elevation} style={cardStyle}>\r\n        {type === FEMALE ? \r\n          <SweetCard style={{rowGap: 0}} titleStyle={[\r\n            styles.preferTitle,\r\n            {color: theme.colors.primary}\r\n          ]} /> \r\n          : \r\n          <FantasyCard style={{rowGap: 0}} titleStyle={[\r\n            styles.preferTitle,\r\n            {color: theme.colors.accent},\r\n          ]} />}\r\n      </Surface>\r\n    </TouchableRipple>\r\n  )\r\n}\r\n\r\nfunction PreferenceScreen({ route, navigation }) {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const [value, setPrefer] = usePrefer();\r\n  const [choice, setChoice] = React.useState(value);\r\n\r\n  return (\r\n    <View style={[styles.container, {backgroundColor: theme.colors.background}]}>\r\n      <HzLogo style={styles.logo} />\r\n      <Caption style={styles.caption}>{t('Which genre do you like ?')}</Caption>\r\n      <View style={styles.prefers}>\r\n        <PreferItem type={FEMALE} checked={choice == FEMALE} onPress={setChoice} />\r\n        <PreferItem type={MALE} checked={choice == MALE} onPress={setChoice} />\r\n      </View>\r\n      <View style={styles.links}>\r\n        <Button style={styles.link}>{t('Terms & Conditions')}</Button>\r\n        <Button style={styles.link}>{t('Privacy Policies')}</Button> \r\n        <Button \r\n          style={styles.next} \r\n          mode=\"contained\"\r\n          onPress={() => {\r\n            setPrefer(choice)\r\n          }}\r\n          >{t('Ok')}</Button> \r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: 10,\r\n    paddingTop: 100,\r\n    paddingBottom: 200,\r\n  },\r\n  logo: { \r\n    height: 80,\r\n  },\r\n  caption: {\r\n    fontSize: 12,\r\n  },\r\n  links: {\r\n    flex: 1,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  link: {\r\n  },\r\n  next: {\r\n    width: '70%',\r\n  },\r\n  prefers: {\r\n    gap: 30,\r\n    flexDirection: 'row',\r\n  },\r\n  preferItem: {\r\n    width: 130,\r\n    height: 130,\r\n  }, \r\n  preferTitle: {\r\n    fontSize: 12,\r\n  }\r\n});\r\n\r\nexport default PreferenceScreen;\r\n","// home.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction LoginScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Login Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","// home.js\r\n\r\nimport * as React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nfunction RegisterScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Register Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\n\r\nimport PreferenceScreen from '../screens/preference';\r\nimport LoginScreen from '../screens/login';\r\nimport RegisterScreen from '../screens/register';\r\n\r\nimport ScreenIds from '../constants/screens';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AuthStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name={ScreenIds.Preference} component={PreferenceScreen} />\r\n      <Stack.Screen name={ScreenIds.Login} component={LoginScreen} />\r\n      <Stack.Screen name={ScreenIds.Register} component={RegisterScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default AuthStack;\r\n","import * as Linking from 'expo-linking';\r\nimport { Text } from 'react-native-paper';\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nconst linking = {\r\n  prefixes: [prefix],\r\n  config: {\r\n    // initialRouteName: 'Home',\r\n    screens: {\r\n      Search: {\r\n        path: 'search',\r\n        exact: true,\r\n      },\r\n      Create: 'new',\r\n      /** bottom tabs */\r\n      AppTabs: {\r\n        // initialRouteName: 'Home',\r\n        screens: {\r\n          /* home tab */\r\n          HomeStack: {\r\n            initialRouteName: 'Home',\r\n            screens: {\r\n              Home: {\r\n                path: '',\r\n                exact: true,\r\n              },\r\n              Details: {\r\n                path: 'stories/:storyCode',\r\n                exact: true,\r\n              },\r\n              Reading: {\r\n                path: 'stories/:storyCode/:chapterCode',\r\n                exact: true,\r\n              },\r\n              Channel: {\r\n                path: 'categories',\r\n                exact: true,\r\n              },\r\n            },\r\n          },\r\n          /* chart tab */\r\n          Chart: { exact: true, path: 'chart' },\r\n          /* explorer tab */\r\n          Explorer: { exact: true, path: 'explorer' },\r\n          /* me tab */\r\n          LibraryStack: {\r\n            initialRouteName: 'Library',\r\n            screens: {\r\n              Library: { exact: true, path: 'library' },\r\n              Inboxes: { exact: true, path: 'inboxes' },\r\n              Settings: { exact: true, path: 'settings' },\r\n            },\r\n          },\r\n          // - end tab --\r\n        },\r\n      },\r\n      NotFound: '*',\r\n    },\r\n  },\r\n};\r\n\r\nconst fallback = <Text>Loading...</Text>;\r\n\r\nexport { linking, fallback };\r\n","import {\r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme,\r\n} from '@react-navigation/native';\r\nimport merge from 'lodash.merge';\r\nimport {\r\n  MD3DarkTheme as PaperDarkTheme,\r\n  MD3LightTheme as PaperDefaultTheme,\r\n} from 'react-native-paper';\r\n\r\nconst defaultThemeModifier = {\r\n  roundness: 2,\r\n};\r\n\r\nconst lightThemeModifier = {\r\n  ...defaultThemeModifier,\r\n  mode: 'exact',\r\n  colors: {\r\n    primary: '#FF424F',\r\n    accent: '#FB98A2',\r\n    background: 'white',\r\n  },\r\n};\r\n\r\nconst darkThemeModifier = {\r\n  ...defaultThemeModifier,\r\n  colors: {\r\n    primary: '#FF424F',\r\n    accent: '#FB98A2',\r\n  },\r\n};\r\n\r\nconst DarkTheme = merge(PaperDarkTheme, NavigationDarkTheme, darkThemeModifier);\r\n\r\nconst DefaultTheme = merge(\r\n  PaperDefaultTheme,\r\n  NavigationDefaultTheme,\r\n  lightThemeModifier\r\n);\r\n\r\nconst themes = {\r\n  light: DefaultTheme,\r\n  dark: DarkTheme,\r\n}\r\n\r\nexport { DarkTheme, DefaultTheme };\r\nexport default themes;\r\n\r\n/**\r\ndark (boolean): whether this is a dark theme or light theme.\r\nmode ('adaptive' | 'exact'): color mode for dark theme (See Dark Theme).\r\nroundness (number): roundness of common elements, such as buttons.\r\ncolors (object): various colors used throughout different elements.\r\n    primary - primary color for your app, usually your brand color.\r\n    accent - secondary color for your app which complements the primary color.\r\n    background - background color for pages, such as lists.\r\n    surface - background color for elements containing content, such as cards.\r\n    text - text color for content.\r\n    disabled - color for disabled elements.\r\n    placeholder - color for placeholder text, such as input placeholder.\r\n    backdrop - color for backdrops of various components such as modals.\r\n    onSurface - background color for snackbars\r\n    notification - background color for badges\r\nfonts (object): various fonts used throughout different elements.\r\n    regular\r\n    medium\r\n    light\r\n    thin\r\nanimation (object)\r\n    scale - scale for all animations\r\n */\r\n","import 'intl-pluralrules';\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: {},\r\n  },\r\n  vi: {\r\n    translation: {\r\n      Home: 'Đề Xuất',\r\n      Chart: '#DHChart',\r\n      '#DHChart': '#DHChart',\r\n      Library: 'Thư Viện',\r\n      Explorer: 'Khám Phá',\r\n      Settings: 'Cài Đặt',\r\n      'Change Language': 'Đổi Ngôn Ngữ',\r\n      'Which genre do you like ?': 'Bạn thích thể loại nào hơn ?',\r\n      'Terms & Conditions': 'Thỏa thuận người dùng',\r\n      'Privacy Policies': 'Thỏa thuận quyền riêng tư',\r\n      'Details': 'Chi tiết',\r\n      'Chapters': 'Chapters',\r\n      'Last Chapter': 'Cập nhập đến',\r\n      'Latest': 'Mới nhất',\r\n      'Oldest': 'Cũ nhất',\r\n      'Start Read': 'Bắt đầu đọc',\r\n      'Start': 'Bắt đầu xem',\r\n      'Back': 'Quay lại',\r\n      'Not found :(': 'Không tìm thấy :(',\r\n      'Full': 'Hoàn',\r\n      'Coming': 'Đang ra',\r\n      'Like': 'Thích',\r\n      'UnLike': 'Bỏ Thích',\r\n      'Share': 'Chia sẻ',\r\n      'Logout': 'Đăng Xuất',\r\n      \r\n    },\r\n  },\r\n};\r\n\r\n\r\nfunction initI18n(lang) {\r\n  i18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: lang,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n}\r\n\r\nexport {\r\n  i18n,\r\n  initI18n,\r\n}\r\n","import * as path from './_patch';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { client } from './api/client';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { reloadAsync } from 'expo-updates';\r\nimport * as React from 'react';\r\nimport { AppState } from 'react-native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nimport { View, StyleSheet, ActivityIndicator, I18nManager as RNI18nManager } from 'react-native';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { initialState, reducer, StateProvider, useGlobals } from './contexs/global';\r\nimport AppStack from './navigation/appStack';\r\nimport AuthStack from './navigation/authStack';\r\nimport { initialPlayerState, playerReducer, PlayerProvider, usePlayerDispatch } from './contexs/player';\r\n\r\nimport { linking, fallback } from './navigation/linking';\r\nimport themes from './theme';\r\nimport { initI18n } from './i18n';\r\nimport Storer from './utils/storer';\r\nimport { DateUtils, Platform } from './utils';\r\nimport { SESSION_KEY } from './constants/session';\r\nimport { PLAYER_KEY } from './constants/player';\r\nimport { initLoggerService } from './services/rlog';\r\n\r\nSplashScreen.preventAutoHideAsync();\r\ninitLoggerService();\r\n\r\n\r\nconst deepLink = Platform.isWeb ? null : linking; // Disable linking in web.\r\n\r\nfunction ThemedApp({ children }) {\r\n\tconst [{ session, day }, dispatch] = useGlobals();\r\n\tconst playerDispatcher = usePlayerDispatch();\r\n\tconst [isReady, setReady] = React.useState(false);\r\n\tconst [appState, setAppState] = React.useState(AppState.currentState);\r\n\tconst activeTheme = themes[session.theme];\r\n\r\n\t/** handle state change */\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\t// Handles screen focus and case when user reopens app one day later (Date has to be updated)\r\n\t\t\tconst onStateChange = (nextAppState) => {\r\n\t\t\t\tif (appState.match(/active/) && nextAppState === 'active') {\r\n\t\t\t\t\tconst nDate = DateUtils.toStr(new Date());\r\n\t\t\t\t\tif (nDate !== day) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: 'setDay',\r\n\t\t\t\t\t\t\tday: nDate\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetAppState(nextAppState);\r\n\t\t\t};\r\n\r\n\t\t\tconst stateListener = AppState.addEventListener('change', onStateChange);\r\n\t\t\treturn () => {\r\n\t\t\t\tstateListener.remove();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[appState, day, dispatch]\r\n\t);\r\n\r\n\t/** startup */\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst session = await Storer.get(SESSION_KEY);\r\n\t\t\t\t\tif (session) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: 'setSession',\r\n\t\t\t\t\t\t\tfields: { ...session }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst playerState = await Storer.get(PLAYER_KEY);\r\n\t\t\t\t\tif (playerState) {\r\n\t\t\t\t\t\tplayerDispatcher({\r\n\t\t\t\t\t\t\ttype: 'setState',\r\n\t\t\t\t\t\t\tfields: { ...playerState }\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (session) {\r\n\t\t\t\t\t\tinitI18n(session.language);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tsetReady(true);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst onLayoutRootView = React.useCallback(async () => {\r\n\t\tif (isReady) {\r\n\t\t\t// This tells the splash screen to hide immediately! If we call this after\r\n\t\t\t// `setAppIsReady`, then we may see a blank screen while the app is\r\n\t\t\t// loading its initial state and rendering its first pixels. So instead,\r\n\t\t\t// we hide the splash screen once we know the root view has already\r\n\t\t\t// performed layout.\r\n\t\t\tawait SplashScreen.hideAsync();\r\n\t\t}\r\n\t}, [isReady]);\r\n\r\n\tif (!isReady) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconsole.log(\"app start with: \", session.prefer)\r\n\r\n\treturn (\r\n\t\t<SafeAreaProvider>\r\n\t\t\t<PaperProvider\r\n\t\t\t\ttheme={activeTheme}\r\n\t\t\t\tsettings={{\r\n\t\t\t\t\ticon: (props) => <Ionicons {...props} />\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<NavigationContainer\r\n\t\t\t\t\ttheme={activeTheme}\r\n\t\t\t\t\tlinking={deepLink}\r\n\t\t\t\t\tfallback={fallback}\r\n\t\t\t\t\tonReady={onLayoutRootView}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsession.prefer ? <AppStack />\r\n\t\t\t\t\t\t\t: <AuthStack />\r\n\t\t\t\t\t}\r\n\t\t\t\t</NavigationContainer>\r\n\t\t\t</PaperProvider>\r\n\t\t</SafeAreaProvider>\r\n\t);\r\n}\r\n\r\nexport default function RootApp() {\r\n\treturn (\r\n\t\t<ApolloProvider client={client}>\r\n\t\t\t<StateProvider initialState={initialState} reducer={reducer}>\r\n\t\t\t\t<PlayerProvider initialState={initialPlayerState}\r\n\t\t\t\t\t            reducer={playerReducer}>\r\n\t\t\t\t\t<ThemedApp />\r\n\t\t\t\t</PlayerProvider>\r\n\t\t\t</StateProvider>\r\n\t\t</ApolloProvider>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#fff',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t}\r\n});\r\n","import PlatformUtils from '../utils/platform';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nexport const initLoggerService = ()=> {\r\n    try {\r\n        console.log('logger: init.');\r\n        Sentry.init({\r\n            dsn: \"https://0f1f374020434793a7e50590ab89bffe@o4505243895332864.ingest.sentry.io/4505243896905728\",\r\n        });\r\n    }\r\n    catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const log = (...args) => {\r\n    console.log(args);\r\n    try {\r\n        Sentry.captureException(args);\r\n    }\r\n    catch(e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport const logException = (e) => {\r\n    try {\r\n        Sentry.captureException(e);\r\n    }\r\n    catch(_e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\n","// patch react-native reanimated in web.\r\nif (typeof window !== 'undefined') {\r\n    window._frameTimestamp = null;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/maudi-web/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [587], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["set","_set","_asyncToGenerator","key","content","AsyncStorage","JSON","stringify","_x","_x2","apply","arguments","get","_get","then","res","parse","catch","_x3","delete","_delete2","_x4","FORMAT_VI","FORMAT_EN","convertDate","format","date","pad","s","getDate","getMonth","getFullYear","join","DateUtils","toVietNamese","toEnglish","toStr","LANGUAGES","filteredLocale","locale","Localization","substring","customLocale","includes","getLocale","isIos","Platform","isAndroid","isWeb","TOKEN_KEY","SESSION_KEY","MALE","FEMALE","BOTH","name","sign","birthDate","sex","level","prefer","theme","notifications","language","Language","mergedEntityTypes","possibleTypes","item","reduce","acc","curr","fields","attributes","merge","mergeRules","queries","keyArgs","existing","length","undefined","data","meta","incoming","merged","concat","_toConsumableArray","uniqBy","_objectSpread","cacheOptions","typePolicies","Query","dataIdFromObject","response","__typename","id","defaultDataIdFromObject","httpLink","createHttpLink","uri","authLink","setContext","_ref2","_","_ref","headers","token","Storer","authorization","client","ApolloClient","link","cache","InMemoryCache","connectToDevTools","reducer","state","action","result","type","session","default_session","showLoader","day","save","initialState","defaultSession","Date","StateContext","createContext","StateProvider","children","_jsx","Provider","value","useReducer","useGlobals","useContext","THEME_DARK","useIsDark","_useGlobals","_useGlobals2","_slicedToArray","dispatch","fmtNum","num","toFixed","ViewsIcon","views","useTheme","_jsxs","View","style","styles","compact","Icon","size","color","colors","secondary","Caption","LikesIcon","likes","NumChapIcon","_ref3","ShareIcon","t","useTranslation","vcompact","LikeIcon","_ref4","liked","minWidth","MuteIcon","_ref8","muted","volume","icon","StyleSheet","gap","flexDirection","alignItems","justifyContent","ShareButton","url","TouchableRipple","onPress","console","log","LikeButton","MuteButton","BadgeIcon","badges","IconButton","Badge","visible","badge","text","backgroundColor","primary","position","fontSize","top","right","GET_CATEGORIES","gql","_templateObject","_taggedTemplateLiteralLoose","flattenAttrs","obj","attrs","flatten","Array","isArray","map","e","flattenArray","flattenData","Error","React","msg","onRefresh","error","Button","NotFound","back","flex","ListLoadmoreIndicator","props","container","ActivityIndicator","ScreenLoadingIndicator","loading","LazyLoadingIndicator","flexGrow","Tag","tag","backdrop","borderWidth","borderRadius","borderColor","outline","Tags","tags","columnGap","height","MEDIA_HOST","STORY_DEFAULT_THUMBNAIL","coverUri","cover","extUrl","startsWith","StoryItem","navigation","code","title","categories","author","external_cover_url","num_chapters","push","storyCode","_Fragment","Image","source","image","resizeMode","head","Subheading","footer","marginVertical","aspectRatio","marginRight","ItemSeparator","separator","ListHeader","ListEmpty","empty","marginHorizontal","GET_STORIES","paddingBottom","list","paddingHorizontal","route","_useQuery","useQuery","notifyOnNetworkStatusChange","variables","start","limit","fetchMore","refetch","networkStatus","message","NetworkStatus","FlatList","contentContainerStyle","stories","ListHeaderComponent","ListFooterComponent","noMore","_data$stories$meta$pa","pagination","page","pageCount","ListEmptyComponent","ItemSeparatorComponent","renderItem","keyExtractor","onEndReachedThreshold","onEndReached","refreshControl","RefreshControl","refreshing","titleColor","tintColor","useIsFemale","_useGlobals5","_useGlobals6","Tab","createMaterialTopTabNavigator","layout","useWindowDimensions","insets","useSafeAreaInsets","isFemale","sort","Navigator","initialLayout","with","width","sceneContainerStyle","paddingTop","bottom","paddingLeft","left","paddingRight","screenOptions","tabBarActiveTintColor","tabBarLabelStyle","textTransform","tabBarItemStyle","tabBarStyle","surface","lazyPreloadDistance","lazyPlaceholder","lazy","animationEnabled","Screen","options","component","ListStories","Text","input","_React$useState","_React$useState2","postText","setPostText","TextInput","multiline","placeholder","onChangeText","post","setOptions","navigate","LIKE_STORY","GET_STORY_LIKES","_templateObject2","_templateObject3","storyId","_useState","useState","_useState2","isLiked","setLiked","_useMutation","useMutation","refetchQueries","query","_useMutation2","like","_useMutation2$","reset","v","_colorFor","ImageColors","platform","background","lightVibrant","average","vibrant","defaultUri","require","darkGradient","lightGradient","GradientCover","contentStyle","imageStyle","progress","useSharedValue","_useIsDark","isDark","setColor","rStyle","useAnimatedStyle","_f","interpolateColor","_closure","asString","__workletHash","__location","__optimalization","_fetchColor","_yield$colorFor","colorFor","withTiming","duration","useEffect","fetchColor","cancelAnimation","Animated","LinearGradient","locations","G_WIN_WIDTH","Dimensions","FROZE_TOP","moveDistance","header","icons","memo","story","scrollHeaderTransStyle","full","headerHeight","useHeaderHeight","marginTop","Title","GET_STORY_DETAILS","StoryDetailRoute","HScrollView","index","scene","ChapterListRoute","barItem","bottomBar","_data$storyByCode","params","setIndex","_React$useState3","routes","_useScrollAnim","scrollTrans","setScrollTrans","transXValue","useDerivedValue","interpolate","Extrapolate","CLAMP","transYValue","scaleValue","headerOpacityValue","transform","translateX","translateY","scale","opacity","titleOpacity","makeScrollTrans","st","titleTransStyle","useScrollAnim","headerTitle","HeaderTitle","headerTintColor","headerRight","iconColor","storyByCode","goBack","renderScene","SceneMap","detail","chapters","CollapsibleHeaderTabView","renderScrollHeader","ScrollHeader","navigationState","onIndexChange","frozeTop","Portal","Surface","elevation","Like","textColor","mode","hasMeta","view","numColumsOf","itemStyleOf","marginLeft","waperStyleOf","stdStories","minHeight","Item","authorName","Collection","screen","slice","storiesOf","moreLink","screenOf","headline","leftTitle","accent","titleText","rightTitle","labelStyle","moreLabel","horizontal","scrollEnabled","numColumns","baseStyles","textAlign","storyTitle","hzSmallStyles","hzLargeStyles","gridSmallStyles","hzlarge","hzsmall","gridlarge","gridsmall","GET_TOP_COLLECTIONS","rowGap","segments","usePrefers","collections","c","overflow","Preference","Login","Register","Chart","Home","Channel","Genre","Explorer","Search","Details","Me","Libarary","Wallet","Music","Inboxes","Settings","Reading","Test","Test2","paddingVertical","padding","circle","modal","slide","backfaceVisibility","front","femaleImgUri","maleImgUri","flip","ScrollView","StoriesCollections","Divider","queryBy","items","Promise","resolve","setTimeout","i","desc","updated","total","totalPage","List","description","alert","setLoading","_React$useState4","setRefreshing","_React$useState5","_React$useState6","moreLoading","setMoreLoading","_React$useState7","_React$useState8","setData","_React$useState9","_React$useState10","setTotalPage","_React$useState11","_React$useState12","setPage","prev","requestAPI","ret","renderFooter","_ref5","InboxItem","_route$params","chapterId","chapterCode","searchQuery","setSearchQuery","Searchbar","resetStore","PLAYER_KEY","CDN_URL","BM_URIs","label","o","HLS_URIs","GH_HOST_MEDIA","SYS_SOUD_URIs","playerReducer","playbackStat","payload","playbackError","track","activeIndex","tracks","bmError","bmState","initialPlayerState","chapter","isLoaded","durationMillis","positionMillis","shouldPlay","isPlaying","isBuffering","isLooping","didJustFinish","progressUpdateIntervalMillis","loopingType","PlayerContext","PlayerProvider","usePlayer","usePlayerDispatch","_usePlayer","_usePlayer2","initState","BmError","BmPlayer","_this","initUrls","onError","onStateChanged","_classCallCheck","onPlaybackStatusUpdate","status","isProgressUpdated","Object","keys","filter","k","every","skip","this","playlist","playback","init","_createClass","Audio","setAudioModeAsync","allowsRecordingIOS","staysActiveInBackground","interruptionModeIOS","InterruptionModeIOS","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","InterruptionModeAndroid","playThroughEarpieceAndroid","_destroy","stop","_stop","unloadAsync","_instancePlayback","playing","initialStatus","_yield$Audio$Sound$cr","sound","urlsToAdd","_error","toString","_play","instancePlayback","playAsync","_pause","pauseAsync","_skip","direction","idx","skipTo","_x5","_skipTo","play","_x6","_volume","val","setVolumeAsync","_x7","_mute","setIsMutedAsync","_x8","_playing","getStatusAsync","_seek","per","to","playFromPositionAsync","_x9","_jump","ms","_x10","useBGMusic","bmPlayer","useRef","err","current","destroy","pause","skipNext","setVolume","setMute","mute","BMVolumeSetting","_useBGMusic","isBMActive","Slider","slider","onValueChange","alignSelf","LANG_VI","row","_useIsFemale","_useIsFemale2","switchPrefer","_useIsDark2","switchTheme","_useIsVi","_useTranslation","i18n","target","changeLanguage","useIsVi","_useIsVi2","isVi","switchLanguage","Switch","AutoSignButton","LogoutButton","CardView","iconUri","_ref$style","_ref$titleStyle","titleStyle","_ref$iconStyle","iconStyle","card","Card","SweetCard","FantasyCard","fontWeight","WebBrowser","maybeCompleteAuthSession","profile","AudioError","PLAYLIST_EMPTY","INVALID_INDEX","INIT_ERROR","AUDIO_ERROR","WAIT_INTERACT","_updateMeta","navigator","mediaSession","metadata","MediaMetadata","artist","album","artwork","src","setActionHandlers","_setActionHandlers","actions","actionHandlers","details","seek","seekOffset","seekTime","handler","setActionHandler","_createAvRef","autoPlay","stat","onStatusUpdate","_createHlsRef","audioRef","Hls","load","hls","attachMedia","on","loadSource","_audioRef$current3","durationSeconds","totalduration","event","fatal","startLoad","recoverMediaError","usePlayback","hlsRef","hlsFallback","avRef","_initPlayback","_yield$createHlsRef","createHlsRef","createAvRef","updateMeta","_x11","resume","_resume","_audioRef$current","_audioRef$current2","_x12","_skipNext","_setVolume","_setMute","_x15","audio","window","preload","autoplay","oncanplay","onplay","onended","onpause","ontimeupdate","currentTime","createAudioRef","initPlayback","_x13","_x14","sampleArwork","hlsTracks","mp3Tracks","_usePlayback","setTracks","SoundUIPlayer","Stack","createNativeStackNavigator","createBottomTabNavigator","initialRouteName","ScreenIds","LibraryStack","MeScreen","SettingScreen","InboxScreen","HomeStack","isFocused","useIsFocused","HomeScreen","ChanelScreen","FAB","AppTabs","headerShown","tabBarLabel","tabBarIcon","_ref6","ChartScreen","_ref7","ExplorerScreen","_ref9","tabBarBadge","tabBarBadgeStyle","barBadge","_ref10","maxWidth","maxHeight","lineHeight","SearchScreen","DetailsScreen","initialParams","headerTransparent","ReadingScreen","CreatePostScreen","ConfirmModal","presentation","cardOverlayEnabled","NotFoundScreen","TestScreen","HzLogo","PreferItem","checked","cardStyle","preferItem","preferTitle","logo","caption","links","next","prefers","_usePrefer","_useGlobals3","_useGlobals4","usePrefer","_usePrefer2","setPrefer","choice","setChoice","PreferenceScreen","LoginScreen","RegisterScreen","linking","prefixes","createURL","config","screens","path","exact","Create","Library","fallback","defaultThemeModifier","roundness","lightThemeModifier","darkThemeModifier","DarkTheme","PaperDarkTheme","NavigationDarkTheme","light","PaperDefaultTheme","NavigationDefaultTheme","dark","resources","en","translation","vi","SplashScreen","Sentry","dsn","initLoggerService","deepLink","ThemedApp","_useGlobals2$","playerDispatcher","isReady","setReady","AppState","appState","setAppState","activeTheme","themes","stateListener","nextAppState","match","nDate","remove","playerState","lang","initReactI18next","lng","fallbackLng","interpolation","escapeValue","onLayoutRootView","SafeAreaProvider","PaperProvider","settings","Ionicons","NavigationContainer","onReady","AppStack","AuthStack","RootApp","ApolloProvider","_frameTimestamp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","defineProperty","enumerable","g","globalThis","Function","hmd","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}